{"version":3,"file":"static/js/640.f702f222.chunk.js","mappings":"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","sources":["components/admin/AdminUsers.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport '../../styles/pages/admin.css';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst AdminUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [editFormData, setEditFormData] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [roleFilter, setRoleFilter] = useState('all');\r\n  const { makeAuthenticatedRequest } = useAuth();\r\n\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/admin/users`);\r\n      setUsers(data.users || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch users:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [makeAuthenticatedRequest]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [fetchUsers]);\r\n\r\n  const startEditUser = (user) => {\r\n    setEditingUser(user._id);\r\n    setEditFormData({\r\n      full_name: user.full_name,\r\n      email: user.email,\r\n      username: user.username,\r\n      phone: user.phone || '',\r\n      address: user.address || ''\r\n    });\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingUser(null);\r\n    setEditFormData({});\r\n  };\r\n\r\n  const saveUser = async (userId) => {\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/admin/users/${userId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(editFormData)\r\n      });\r\n\r\n      alert('User updated successfully');\r\n      fetchUsers();\r\n      setEditingUser(null);\r\n      setEditFormData({});\r\n    } catch (error) {\r\n      console.error('Failed to update user:', error);\r\n      alert(error.message || 'Failed to update user');\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userId, userName) => {\r\n    if (!window.confirm(`Delete user \"${userName}\"? This action cannot be undone.`)) return;\r\n\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/admin/users/${userId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      alert('User deleted successfully');\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Failed to delete user:', error);\r\n      alert(error.message || 'Failed to delete user');\r\n    }\r\n  };\r\n\r\n  const updateUserRole = async (userId, isAdmin) => {\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/admin/users/${userId}/admin`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({ is_admin: isAdmin })\r\n      });\r\n\r\n      const roleText = isAdmin ? 'admin' : 'regular user';\r\n      alert(`User role updated to ${roleText}`);\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Failed to update user role:', error);\r\n      alert(error.message || 'Failed to update user role');\r\n    }\r\n  };\r\n\r\n  // Filter users based on search and role\r\n  const filteredUsers = users.filter(user => {\r\n    const matchesSearch = user.full_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                          user.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                          user.username?.toLowerCase().includes(searchTerm.toLowerCase());\r\n    \r\n    const matchesRole = roleFilter === 'all' || \r\n                       (roleFilter === 'admin' && user.is_admin) ||\r\n                       (roleFilter === 'user' && !user.is_admin);\r\n    \r\n    return matchesSearch && matchesRole;\r\n  });\r\n\r\n  const getUserCount = (role) => {\r\n    if (role === 'all') return users.length;\r\n    return users.filter(user => role === 'admin' ? user.is_admin : !user.is_admin).length;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"admin-users\">\r\n        <div className=\"container\">\r\n          <p>Loading users...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-users\">\r\n      <div className=\"container\">\r\n        <h1>User Management</h1>\r\n        \r\n        {/* Search and Filter Section */}\r\n        <div className=\"filter-section\">\r\n          <div className=\"search-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search users by name, email, or username...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"search-input\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"filter-buttons\">\r\n            <button \r\n              className={`filter-btn ${roleFilter === 'all' ? 'active' : ''}`}\r\n              onClick={() => setRoleFilter('all')}\r\n            >\r\n              All Users ({getUserCount('all')})\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${roleFilter === 'admin' ? 'active' : ''}`}\r\n              onClick={() => setRoleFilter('admin')}\r\n            >\r\n              Admins ({getUserCount('admin')})\r\n            </button>\r\n            <button \r\n              className={`filter-btn ${roleFilter === 'user' ? 'active' : ''}`}\r\n              onClick={() => setRoleFilter('user')}\r\n            >\r\n              Users ({getUserCount('user')})\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Users Display */}\r\n        <div className=\"users-section\">\r\n          {filteredUsers.length === 0 ? (\r\n            <div className=\"no-users\">\r\n              <p>\r\n                {searchTerm ? `No users found matching \"${searchTerm}\".` : 'No users found.'}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"users-list\">\r\n              {filteredUsers.map(user => (\r\n                <div key={user._id} className=\"user-card\">\r\n                  {editingUser === user._id ? (\r\n                    <div className=\"edit-form\">\r\n                      <h3>Edit User</h3>\r\n                      <div className=\"form-grid\">\r\n                        <input\r\n                          type=\"text\"\r\n                          value={editFormData.full_name}\r\n                          onChange={(e) => setEditFormData({...editFormData, full_name: e.target.value})}\r\n                          placeholder=\"Full Name\"\r\n                        />\r\n                        <input\r\n                          type=\"email\"\r\n                          value={editFormData.email}\r\n                          onChange={(e) => setEditFormData({...editFormData, email: e.target.value})}\r\n                          placeholder=\"Email\"\r\n                        />\r\n                        <input\r\n                          type=\"text\"\r\n                          value={editFormData.username}\r\n                          onChange={(e) => setEditFormData({...editFormData, username: e.target.value})}\r\n                          placeholder=\"Username\"\r\n                        />\r\n                        <input\r\n                          type=\"tel\"\r\n                          value={editFormData.phone}\r\n                          onChange={(e) => setEditFormData({...editFormData, phone: e.target.value})}\r\n                          placeholder=\"Phone\"\r\n                        />\r\n                        <textarea\r\n                          value={editFormData.address}\r\n                          onChange={(e) => setEditFormData({...editFormData, address: e.target.value})}\r\n                          placeholder=\"Address\"\r\n                          rows=\"3\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"edit-actions\">\r\n                        <button \r\n                          className=\"save-btn\"\r\n                          onClick={() => saveUser(user._id)}\r\n                        >\r\n                          Save Changes\r\n                        </button>\r\n                        <button \r\n                          className=\"cancel-btn\"\r\n                          onClick={cancelEdit}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"user-info\">\r\n                        <div className=\"user-header\">\r\n                          <h3>{user.full_name}</h3>\r\n                          <span className={`role-badge ${user.is_admin ? 'admin' : 'user'}`}>\r\n                            {user.is_admin ? 'Admin' : 'User'}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"user-details\">\r\n                          <p><strong>Email:</strong> {user.email}</p>\r\n                          <p><strong>Username:</strong> {user.username}</p>\r\n                          <p><strong>Phone:</strong> {user.phone || 'Not provided'}</p>\r\n                          <p><strong>Address:</strong> {user.address || 'Not provided'}</p>\r\n                          <p><strong>Orders:</strong> {user.order_count || 0}</p>\r\n                          <p><strong>Joined:</strong> {user.created_at ? new Date(user.created_at).toLocaleDateString() : 'Unknown'}</p>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"user-actions\">\r\n                        <button\r\n                          className=\"edit-btn\"\r\n                          onClick={() => startEditUser(user)}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button\r\n                          className={`role-btn ${user.is_admin ? 'remove-admin' : 'make-admin'}`}\r\n                          onClick={() => updateUserRole(user._id, !user.is_admin)}\r\n                        >\r\n                          {user.is_admin ? 'Remove Admin' : 'Make Admin'}\r\n                        </button>\r\n                        <button\r\n                          className=\"delete-btn\"\r\n                          onClick={() => deleteUser(user._id, user.full_name)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUsers;"],"names":["API_BASE","process","REACT_APP_API_BASE_URL","AdminUsers","users","setUsers","useState","loading","setLoading","editingUser","setEditingUser","editFormData","setEditFormData","searchTerm","setSearchTerm","roleFilter","setRoleFilter","makeAuthenticatedRequest","useAuth","fetchUsers","useCallback","async","data","concat","error","useEffect","cancelEdit","filteredUsers","filter","user","_user$full_name","_user$email","_user$username","matchesSearch","full_name","toLowerCase","includes","email","username","matchesRole","is_admin","getUserCount","role","length","_jsx","className","children","_jsxs","type","placeholder","value","onChange","e","target","onClick","map","_id","_objectSpread","phone","address","rows","userId","method","body","JSON","stringify","alert","message","saveUser","_Fragment","order_count","created_at","Date","toLocaleDateString","startEditUser","isAdmin","updateUserRole","userName","window","confirm","deleteUser"],"sourceRoot":""}