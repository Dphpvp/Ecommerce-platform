{"version":3,"file":"static/js/54.2300e056.chunk.js","mappings":"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","sources":["pages/Orders.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Modal Component\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"modal-close\" onClick={onClose}>Ã—</button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const { makeAuthenticatedRequest } = useAuth();\r\n\r\n  const fetchOrders = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/orders`);\r\n      setOrders(Array.isArray(data) ? data : []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch orders:', error);\r\n      setOrders([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [makeAuthenticatedRequest]);\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [fetchOrders]);\r\n\r\n  const openModal = (order) => {\r\n    setSelectedOrder(order);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedOrder(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString();\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    const colors = {\r\n      pending: \"#ffc107\",\r\n      accepted: \"#17a2b8\",\r\n      processing: \"#007bff\",\r\n      shipped: \"#28a745\",\r\n      delivered: \"#6c757d\",\r\n      cancelled: \"#dc3545\",\r\n    };\r\n    return colors[status] || \"#6c757d\";\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"orders\">\r\n        <div className=\"container\">\r\n          <h1>My Orders</h1>\r\n          <p>Loading orders...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"orders\">\r\n      <div className=\"container\">\r\n        <h1>My Orders</h1>\r\n        \r\n        {orders.length === 0 ? (\r\n          <div className=\"no-orders\">\r\n            <p>You haven't placed any orders yet.</p>\r\n            <Link to=\"/products\" className=\"btn btn-primary\">Start Shopping</Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"orders-list\">\r\n            {orders.map(order => (\r\n              <div key={order._id} className=\"order-management-card\">\r\n                <div className=\"order-header\">\r\n                  <div className=\"order-basic-info\">\r\n                    <h3>Order #{order.order_number || order._id.slice(-8)}</h3>\r\n                    <p>Total: ${order.total_amount.toFixed(2)}</p>\r\n                    <p>Date: {formatDate(order.created_at)}</p>\r\n                    <p>Items: {order.items?.length || 0}</p>\r\n                  </div>\r\n                  <div className=\"order-status-section\">\r\n                    <span \r\n                      className=\"current-status\"\r\n                      style={{ backgroundColor: getStatusColor(order.status) }}\r\n                    >\r\n                      {order.status.toUpperCase()}\r\n                    </span>\r\n                    <button\r\n                      className=\"details-toggle\"\r\n                      onClick={() => openModal(order)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n          {selectedOrder && (\r\n            <>\r\n              <h2>Order #{selectedOrder.order_number || selectedOrder._id.slice(-8)}</h2>\r\n\r\n              <section>\r\n                <h3>Order Information</h3>\r\n                <p><strong>Order ID:</strong> {selectedOrder._id}</p>\r\n                <p><strong>Date:</strong> {formatDate(selectedOrder.created_at)}</p>\r\n                <p><strong>Status:</strong> {selectedOrder.status}</p>\r\n                <p><strong>Total Amount:</strong> ${selectedOrder.total_amount.toFixed(2)}</p>\r\n              </section>\r\n\r\n              {selectedOrder.shipping_address && (\r\n                <section>\r\n                  <h3>Shipping Address</h3>\r\n                  <p>\r\n                    {selectedOrder.shipping_address.street}<br />\r\n                    {selectedOrder.shipping_address.city}, {selectedOrder.shipping_address.state} {selectedOrder.shipping_address.zipCode}<br />\r\n                    {selectedOrder.shipping_address.country}\r\n                  </p>\r\n                </section>\r\n              )}\r\n\r\n              <section>\r\n                <h3>Items</h3>\r\n                {selectedOrder.items?.map((item, index) => (\r\n                  <div key={index} className=\"order-item-detail\">\r\n                    <img\r\n                      src={item.product?.image_url}\r\n                      alt={item.product?.name}\r\n                      className=\"item-image\"\r\n                    />\r\n                    <div>\r\n                      <p><strong>{item.product?.name}</strong></p>\r\n                      <p>Quantity: {item.quantity}</p>\r\n                      <p>Price: ${item.product?.price?.toFixed(2)} each</p>\r\n                      <p>Subtotal: ${(item.product?.price * item.quantity)?.toFixed(2)}</p>\r\n                    </div>\r\n                  </div>\r\n                )) || <p>No items found</p>}\r\n              </section>\r\n            </>\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;"],"names":["API_BASE","process","REACT_APP_API_BASE_URL","Modal","_ref","isOpen","onClose","children","_jsx","className","onClick","_jsxs","e","stopPropagation","Orders","_selectedOrder$items","orders","setOrders","useState","selectedOrder","setSelectedOrder","isModalOpen","setIsModalOpen","loading","setLoading","makeAuthenticatedRequest","useAuth","fetchOrders","useCallback","async","data","concat","Array","isArray","error","useEffect","formatDate","dateString","Date","toLocaleString","length","Link","to","map","order","_order$items","status","order_number","_id","slice","total_amount","toFixed","created_at","items","style","backgroundColor","pending","accepted","processing","shipped","delivered","cancelled","toUpperCase","openModal","closeModal","_Fragment","shipping_address","street","city","state","zipCode","country","item","index","_item$product","_item$product2","_item$product3","_item$product4","_item$product4$price","_ref2","_item$product5","src","product","image_url","alt","name","quantity","price"],"sourceRoot":""}