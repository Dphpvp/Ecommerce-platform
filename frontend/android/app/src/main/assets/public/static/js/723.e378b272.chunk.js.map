{"version":3,"file":"static/js/723.e378b272.chunk.js","mappings":"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","sources":["components/admin/AdminOrders.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport '../../styles/pages/admin.css';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Modal Component\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"modal-close\" onClick={onClose}>√ó</button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Order Management Card Component\r\nconst OrderManagementCard = ({ order, onStatusUpdate, getStatusColor }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedStatus, setSelectedStatus] = useState(order.status);\r\n\r\n  const handleStatusChange = () => {\r\n    if (selectedStatus !== order.status) {\r\n      onStatusUpdate(order._id, selectedStatus);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"order-management-card\">\r\n        <div className=\"order-header\">\r\n          <div className=\"order-basic-info\">\r\n            <h3>Order #{order._id.slice(-8)}</h3>\r\n            <p>\r\n              Customer: {order.user_info?.full_name || 'Unknown'} ({order.user_info?.email || 'Unknown'})\r\n            </p>\r\n            <p>Total: ${order.total_amount.toFixed(2)}</p>\r\n            <p>Date: {formatDate(order.created_at)}</p>\r\n          </div>\r\n          <div className=\"order-status-section\">\r\n            <span\r\n              className=\"current-status\"\r\n              style={{ backgroundColor: getStatusColor(order.status) }}\r\n            >\r\n              {order.status.toUpperCase()}\r\n            </span>\r\n            <button\r\n              className=\"details-toggle\"\r\n              onClick={() => setIsModalOpen(true)}\r\n            >\r\n              View Details\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\r\n        <h2>Order #{order._id.slice(-8)}</h2>\r\n\r\n        <section>\r\n          <h3>üë§ Customer Info</h3>\r\n          <p><strong>Name:</strong> {order.user_info?.full_name || 'Unknown'}</p>\r\n          <p><strong>Email:</strong> {order.user_info?.email || 'Unknown'}</p>\r\n          <p><strong>Username:</strong> {order.user_info?.username || 'Unknown'}</p>\r\n          <p><strong>Phone:</strong> {order.user_info?.phone || \"Not provided\"}</p>\r\n        </section>\r\n\r\n        <section>\r\n          <h3>üìç Shipping Address</h3>\r\n          {order.shipping_address ? (\r\n            <p>\r\n              {order.shipping_address.street}<br />\r\n              {order.shipping_address.city}, {order.shipping_address.state}{\" \"}\r\n              {order.shipping_address.zipCode}<br />\r\n              {order.shipping_address.country}\r\n            </p>\r\n          ) : (\r\n            <p>No shipping address provided</p>\r\n          )}\r\n        </section>\r\n\r\n        <section>\r\n          <h3>üì¶ Items</h3>\r\n          {order.items?.map((item, index) => (\r\n            <div key={index} className=\"order-item-detail\">\r\n              <img\r\n                src={item.product?.image_url}\r\n                alt={item.product?.name}\r\n                className=\"item-image\"\r\n              />\r\n              <div>\r\n                <p><strong>{item.product?.name}</strong></p>\r\n                <p>Quantity: {item.quantity}</p>\r\n                <p>Price: ${item.product?.price?.toFixed(2)} each</p>\r\n                <p>Subtotal: ${(item.product?.price * item.quantity)?.toFixed(2)}</p>\r\n              </div>\r\n            </div>\r\n          )) || <p>No items found</p>}\r\n        </section>\r\n\r\n        <section>\r\n          <h3>‚öôÔ∏è Update Status</h3>\r\n          <div className=\"status-update-section\">\r\n            <select\r\n              value={selectedStatus}\r\n              onChange={(e) => setSelectedStatus(e.target.value)}\r\n              style={{\r\n                backgroundColor: getStatusColor(selectedStatus),\r\n                color: \"white\",\r\n                padding: \"8px 12px\",\r\n                borderRadius: \"5px\",\r\n                border: \"none\",\r\n                marginRight: \"1rem\"\r\n              }}\r\n            >\r\n              {[\r\n                \"pending\",\r\n                \"accepted\",\r\n                \"processing\",\r\n                \"shipped\",\r\n                \"delivered\",\r\n                \"cancelled\",\r\n              ].map((status) => (\r\n                <option key={status} value={status}>\r\n                  {status.charAt(0).toUpperCase() + status.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button\r\n              onClick={() => {\r\n                handleStatusChange();\r\n                setIsModalOpen(false);\r\n              }}\r\n              disabled={selectedStatus === order.status}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Update Status\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n// Main Admin Orders Component\r\nconst AdminOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const { makeAuthenticatedRequest } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchOrdersWithFilter = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const url = filter\r\n          ? `${API_BASE}/admin/orders?status=${filter}`\r\n          : `${API_BASE}/admin/orders`;\r\n\r\n        console.log('Fetching URL:', url, 'Filter:', filter);\r\n\r\n        const data = await makeAuthenticatedRequest(url);\r\n        console.log('Orders received:', data.orders?.length || 0);\r\n        setOrders(data.orders || []);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch orders:\", error);\r\n        setOrders([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchOrdersWithFilter();\r\n  }, [filter, makeAuthenticatedRequest]);\r\n\r\n  const updateOrderStatus = async (orderId, newStatus) => {\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/admin/orders/${orderId}/status`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ status: newStatus })\r\n      });\r\n\r\n      alert(`Order status updated to ${newStatus}`);\r\n      // Trigger re-fetch by updating filter\r\n      setFilter(filter + \"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to update order:\", error);\r\n      alert(\"Failed to update order status\");\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    const colors = {\r\n      pending: \"#ffc107\",\r\n      accepted: \"#17a2b8\",\r\n      processing: \"#007bff\",\r\n      shipped: \"#28a745\",\r\n      delivered: \"#6c757d\",\r\n      cancelled: \"#dc3545\",\r\n    };\r\n    return colors[status] || \"#6c757d\";\r\n  };\r\n\r\n  const statusOptions = [\r\n    { value: \"\", label: \"All Orders\" },\r\n    { value: \"pending\", label: \"Pending\" },\r\n    { value: \"accepted\", label: \"Accepted\" },\r\n    { value: \"processing\", label: \"Processing\" },\r\n    { value: \"shipped\", label: \"Shipped\" },\r\n    { value: \"delivered\", label: \"Delivered\" },\r\n    { value: \"cancelled\", label: \"Cancelled\" },\r\n  ];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"admin-orders\">\r\n        <div className=\"container\">\r\n          <p className=\"loading-message\">‚è≥ Loading orders...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-orders\">\r\n      <div className=\"container\">\r\n        <div className=\"orders-header\">\r\n          <h1>Order Management</h1>\r\n          \r\n          <div className=\"filter-section\">\r\n            <h3>üîç Filter Orders</h3>\r\n            <div className=\"filter-buttons\">\r\n              {statusOptions.map((option) => (\r\n                <button\r\n                  key={option.value}\r\n                  onClick={() => setFilter(option.value)}\r\n                  className={`filter-btn ${filter === option.value ? 'active' : ''}`}\r\n                  style={\r\n                    filter === option.value && option.value\r\n                      ? { backgroundColor: getStatusColor(option.value), color: 'white' }\r\n                      : filter === option.value\r\n                      ? { backgroundColor: '#007bff', color: 'white' }\r\n                      : {}\r\n                  }\r\n                >\r\n                  {option.label}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"orders-section\">\r\n          <div className=\"orders-list\">\r\n            {orders.map((order) => (\r\n              <OrderManagementCard\r\n                key={order._id}\r\n                order={order}\r\n                onStatusUpdate={updateOrderStatus}\r\n                getStatusColor={getStatusColor}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          {orders.length === 0 && (\r\n            <div className=\"no-orders\">\r\n              <p>üì¶ No orders found for the selected filters.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminOrders;"],"names":["API_BASE","process","REACT_APP_API_BASE_URL","Modal","_ref","isOpen","onClose","children","_jsx","className","onClick","_jsxs","e","stopPropagation","OrderManagementCard","_ref2","_order$user_info","_order$user_info2","_order$user_info3","_order$user_info4","_order$user_info5","_order$user_info6","_order$items","order","onStatusUpdate","getStatusColor","isModalOpen","setIsModalOpen","useState","selectedStatus","setSelectedStatus","status","_Fragment","_id","slice","user_info","full_name","email","total_amount","toFixed","dateString","created_at","Date","toLocaleString","style","backgroundColor","toUpperCase","username","phone","shipping_address","street","city","state","zipCode","country","items","map","item","index","_item$product","_item$product2","_item$product3","_item$product4","_item$product4$price","_ref3","_item$product5","src","product","image_url","alt","name","quantity","price","value","onChange","target","color","padding","borderRadius","border","marginRight","charAt","disabled","AdminOrders","orders","setOrders","loading","setLoading","filter","setFilter","makeAuthenticatedRequest","useAuth","useEffect","async","url","concat","data","error","fetchOrdersWithFilter","updateOrderStatus","orderId","newStatus","method","body","JSON","stringify","alert","pending","accepted","processing","shipped","delivered","cancelled","label","option","length"],"sourceRoot":""}