{"version":3,"file":"static/js/686.6255e40d.chunk.js","mappings":"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","sources":["components/admin/AdminCategories.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport 'styles/pages/admin.css';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst AdminCategories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState(null);\r\n  const [newCategoryName, setNewCategoryName] = useState('');\r\n  const [parentCategory, setParentCategory] = useState('');\r\n  const [creating, setCreating] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [categoryProducts, setCategoryProducts] = useState([]);\r\n  const [loadingProducts, setLoadingProducts] = useState(false);\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const [editFormData, setEditFormData] = useState({});\r\n  const [expandedCategories, setExpandedCategories] = useState(new Set());\r\n  const { makeAuthenticatedRequest } = useAuth();\r\n  const productsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n    fetchDebugInfo();\r\n  }, []);\r\n\r\n  const fetchDebugInfo = async () => {\r\n    try {\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/admin/debug`);\r\n      setDebugInfo(data);\r\n      console.log('Debug info:', data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch debug info:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/admin/categories`);\r\n      console.log('Categories response:', data);\r\n      setCategories(data.categories || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch categories:', error);\r\n      setError(error.message);\r\n      setCategories([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createCategory = async (e) => {\r\n    e.preventDefault();\r\n    if (!newCategoryName.trim()) return;\r\n    \r\n    setCreating(true);\r\n    try {\r\n      const result = await makeAuthenticatedRequest(`${API_BASE}/admin/categories`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({ \r\n          name: newCategoryName.trim(),\r\n          parent: parentCategory \r\n        })\r\n      });\r\n      \r\n      console.log('Category created:', result);\r\n      setNewCategoryName('');\r\n      setParentCategory('');\r\n      fetchCategories();\r\n      fetchDebugInfo();\r\n    } catch (error) {\r\n      console.error('Failed to create category:', error);\r\n      alert(error.message || 'Failed to create category');\r\n    } finally {\r\n      setCreating(false);\r\n    }\r\n  };\r\n\r\n  const deleteCategory = async (categoryName) => {\r\n    const subcategoryCount = categories.filter(cat => \r\n      cat.name.startsWith(categoryName + '/') || cat.name === categoryName\r\n    ).length;\r\n    \r\n    const hasProducts = categories.find(cat => cat.name === categoryName)?.product_count > 0;\r\n    \r\n    let message = subcategoryCount > 1 \r\n      ? `Delete \"${categoryName}\" and ${subcategoryCount - 1} subcategories?`\r\n      : `Delete category \"${categoryName}\"?`;\r\n    \r\n    if (hasProducts) {\r\n      message += '\\n\\nProducts will be moved to \"Uncategorized\" category.';\r\n    }\r\n    \r\n    if (!window.confirm(message)) return;\r\n    \r\n    try {\r\n      const encodedName = encodeURIComponent(categoryName);\r\n      const result = await makeAuthenticatedRequest(`${API_BASE}/admin/categories/${encodedName}`, {\r\n        method: 'DELETE'\r\n      });\r\n      \r\n      alert(result.message);\r\n      fetchCategories();\r\n      fetchDebugInfo();\r\n      if (selectedCategory === categoryName) {\r\n        setSelectedCategory(null);\r\n        setCategoryProducts([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete category:', error);\r\n      alert(error.message || 'Failed to delete category');\r\n    }\r\n  };\r\n\r\n  // Get hierarchical structure for display\r\n  const getHierarchicalCategories = () => {\r\n    const tree = {};\r\n    \r\n    categories.forEach(cat => {\r\n      const parts = cat.name.split('/');\r\n      let current = tree;\r\n      \r\n      parts.forEach((part, index) => {\r\n        const fullPath = parts.slice(0, index + 1).join('/');\r\n        if (!current[part]) {\r\n          current[part] = {\r\n            name: fullPath,\r\n            children: {},\r\n            data: categories.find(c => c.name === fullPath) || { \r\n              name: fullPath, \r\n              product_count: 0, \r\n              total_stock: 0, \r\n              level: index \r\n            }\r\n          };\r\n        }\r\n        current = current[part].children;\r\n      });\r\n    });\r\n    \r\n    return tree;\r\n  };\r\n\r\n  const toggleExpanded = (categoryName) => {\r\n    const newExpanded = new Set(expandedCategories);\r\n    if (newExpanded.has(categoryName)) {\r\n      newExpanded.delete(categoryName);\r\n    } else {\r\n      newExpanded.add(categoryName);\r\n    }\r\n    setExpandedCategories(newExpanded);\r\n  };\r\n\r\n  const renderCategoryTree = (tree, level = 0) => {\r\n    return Object.entries(tree).map(([key, value]) => {\r\n      const hasChildren = Object.keys(value.children).length > 0;\r\n      const isExpanded = expandedCategories.has(value.name);\r\n      const indentStyle = { marginLeft: `${level * 20}px` };\r\n      \r\n      return (\r\n        <div key={value.name} className=\"category-tree-item\">\r\n          <div className=\"category-card\" style={indentStyle}>\r\n            <div className=\"category-header\">\r\n              {hasChildren && (\r\n                <button \r\n                  className=\"expand-toggle\"\r\n                  onClick={() => toggleExpanded(value.name)}\r\n                >\r\n                  {isExpanded ? '▼' : '▶'}\r\n                </button>\r\n              )}\r\n              <div className=\"category-info\">\r\n                <h3>{key}</h3>\r\n                <div className=\"category-stats\">\r\n                  <span>Products: {value.data.product_count}</span>\r\n                  <span>Stock: {value.data.total_stock}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"category-actions\">\r\n              <button \r\n                className=\"view-btn\"\r\n                onClick={() => viewCategoryProducts(value.name)}\r\n                disabled={loadingProducts}\r\n              >\r\n                {selectedCategory === value.name ? 'Hide Products' : 'View'}\r\n              </button>\r\n              <button \r\n                className=\"add-sub-btn\"\r\n                onClick={() => setParentCategory(value.name)}\r\n              >\r\n                Add Sub\r\n              </button>\r\n              <button \r\n                className=\"delete-btn\"\r\n                onClick={() => deleteCategory(value.name)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {hasChildren && isExpanded && (\r\n            <div className=\"subcategories\">\r\n              {renderCategoryTree(value.children, level + 1)}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const viewCategoryProducts = async (categoryName) => {\r\n    if (selectedCategory === categoryName) {\r\n      setSelectedCategory(null);\r\n      setCategoryProducts([]);\r\n      return;\r\n    }\r\n    \r\n    setLoadingProducts(true);\r\n    try {\r\n      const products = await makeAuthenticatedRequest(`${API_BASE}/products?category=${encodeURIComponent(categoryName)}`);\r\n      setCategoryProducts(products);\r\n      setSelectedCategory(categoryName);\r\n      \r\n      setTimeout(() => {\r\n        productsRef.current?.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'start' \r\n        });\r\n      }, 100);\r\n    } catch (error) {\r\n      console.error('Failed to fetch products:', error);\r\n      alert('Failed to load products');\r\n    } finally {\r\n      setLoadingProducts(false);\r\n    }\r\n  };\r\n\r\n  const startEditProduct = (product) => {\r\n    setEditingProduct(product._id);\r\n    setEditFormData({\r\n      name: product.name,\r\n      description: product.description,\r\n      price: product.price,\r\n      stock: product.stock,\r\n      image_url: product.image_url\r\n    });\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingProduct(null);\r\n    setEditFormData({});\r\n  };\r\n\r\n  const saveProduct = async (productId) => {\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/admin/products/${productId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(editFormData)\r\n      });\r\n\r\n      viewCategoryProducts(selectedCategory);\r\n      fetchCategories();\r\n      setEditingProduct(null);\r\n      setEditFormData({});\r\n    } catch (error) {\r\n      console.error('Failed to update product:', error);\r\n      alert('Failed to update product');\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (productId, productName) => {\r\n    if (!window.confirm(`Delete product \"${productName}\"?`)) return;\r\n\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/admin/products/${productId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      viewCategoryProducts(selectedCategory);\r\n      fetchCategories();\r\n      fetchDebugInfo();\r\n    } catch (error) {\r\n      console.error('Failed to delete product:', error);\r\n      alert('Failed to delete product');\r\n    }\r\n  };\r\n\r\n  // Get parent categories for dropdown\r\n  const getParentOptions = () => {\r\n    const parents = [...new Set(categories.map(cat => {\r\n      const parts = cat.name.split('/');\r\n      return parts.slice(0, -1).join('/');\r\n    }).filter(Boolean))];\r\n    \r\n    const roots = categories.filter(cat => !cat.name.includes('/')).map(cat => cat.name);\r\n    \r\n    return [...new Set([...roots, ...parents])].sort();\r\n  };\r\n\r\n  if (loading) return <div className=\"container\"><p>Loading categories...</p></div>;\r\n\r\n  return (\r\n    <div className=\"admin-categories\">\r\n      <div className=\"container\">\r\n        <h1>Categories Management</h1>\r\n        \r\n        {/* Debug Information */}\r\n        {debugInfo && (\r\n          <div className=\"debug-info\" style={{ \r\n            backgroundColor: '#f8f9fa', \r\n            padding: '1rem', \r\n            marginBottom: '1rem', \r\n            borderRadius: '5px',\r\n            fontSize: '0.9rem' \r\n          }}>\r\n            <strong>Debug Info:</strong> \r\n            Total Products: {debugInfo.total_products || 0} | \r\n            Categories Found: {categories.length}\r\n            {debugInfo.error && <div style={{ color: 'red' }}>Error: {debugInfo.error}</div>}\r\n          </div>\r\n        )}\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"error-message\" style={{ \r\n            backgroundColor: '#f8d7da', \r\n            color: '#721c24', \r\n            padding: '1rem', \r\n            marginBottom: '1rem', \r\n            borderRadius: '5px' \r\n          }}>\r\n            Error: {error}\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={createCategory} className=\"category-form\">\r\n          <div className=\"form-row\">\r\n            <select\r\n              value={parentCategory}\r\n              onChange={(e) => setParentCategory(e.target.value)}\r\n              disabled={creating}\r\n            >\r\n              <option value=\"\">Root Category</option>\r\n              {getParentOptions().map(parent => (\r\n                <option key={parent} value={parent}>{parent}</option>\r\n              ))}\r\n            </select>\r\n            <input\r\n              type=\"text\"\r\n              value={newCategoryName}\r\n              onChange={(e) => setNewCategoryName(e.target.value)}\r\n              placeholder=\"New category name\"\r\n              disabled={creating}\r\n            />\r\n            <button type=\"submit\" disabled={creating || !newCategoryName.trim()}>\r\n              {creating ? 'Creating...' : 'Add Category'}\r\n            </button>\r\n          </div>\r\n          {parentCategory && (\r\n            <p className=\"parent-preview\">\r\n              Creating: <strong>{parentCategory}/{newCategoryName}</strong>\r\n              <button type=\"button\" onClick={() => setParentCategory('')} className=\"clear-parent\">×</button>\r\n            </p>\r\n          )}\r\n        </form>\r\n\r\n        {categories.length === 0 ? (\r\n          <div style={{ textAlign: 'center', padding: '2rem', backgroundColor: '#f8f9fa', borderRadius: '5px' }}>\r\n            <h3>No categories found</h3>\r\n            <p>Categories are created from existing products. You can:</p>\r\n            <ol style={{ textAlign: 'left', display: 'inline-block' }}>\r\n              <li>Create your first category above</li>\r\n              <li>Add products in the Products section</li>\r\n              <li>Assign categories to products</li>\r\n            </ol>\r\n            <p>\r\n              <strong>Tip:</strong> Create a category like \"Electronics\" or \"Clothing\" to get started.\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"categories-tree\">\r\n            {renderCategoryTree(getHierarchicalCategories())}\r\n          </div>\r\n        )}\r\n            \r\n        {selectedCategory && (\r\n          <div className=\"products-section\" ref={productsRef}>\r\n            <h2>Products in \"{selectedCategory}\" Category</h2>\r\n            {loadingProducts ? (\r\n              <p>Loading products...</p>\r\n            ) : categoryProducts.length === 0 ? (\r\n              <p>No products found in this category.</p>\r\n            ) : (\r\n              <div className=\"products-grid\">\r\n                {categoryProducts.map(product => (\r\n                  <div key={product._id} className=\"product-card\">\r\n                    {editingProduct === product._id ? (\r\n                      <div className=\"edit-form\">\r\n                        <input\r\n                          type=\"text\"\r\n                          value={editFormData.name}\r\n                          onChange={(e) => setEditFormData({...editFormData, name: e.target.value})}\r\n                          placeholder=\"Product name\"\r\n                        />\r\n                        <textarea\r\n                          value={editFormData.description}\r\n                          onChange={(e) => setEditFormData({...editFormData, description: e.target.value})}\r\n                          placeholder=\"Description\"\r\n                          rows=\"3\"\r\n                        />\r\n                        <input\r\n                          type=\"number\"\r\n                          step=\"0.01\"\r\n                          value={editFormData.price}\r\n                          onChange={(e) => setEditFormData({...editFormData, price: parseFloat(e.target.value)})}\r\n                          placeholder=\"Price\"\r\n                        />\r\n                        <input\r\n                          type=\"number\"\r\n                          value={editFormData.stock}\r\n                          onChange={(e) => setEditFormData({...editFormData, stock: parseInt(e.target.value)})}\r\n                          placeholder=\"Stock\"\r\n                        />\r\n                        <input\r\n                          type=\"url\"\r\n                          value={editFormData.image_url}\r\n                          onChange={(e) => setEditFormData({...editFormData, image_url: e.target.value})}\r\n                          placeholder=\"Image URL\"\r\n                        />\r\n                        <div className=\"edit-actions\">\r\n                          <button \r\n                            className=\"save-btn\"\r\n                            onClick={() => saveProduct(product._id)}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                          <button \r\n                            className=\"cancel-btn\"\r\n                            onClick={cancelEdit}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        <img src={product.image_url} alt={product.name} />\r\n                        <h4>{product.name}</h4>\r\n                        <p className=\"price\">${product.price}</p>\r\n                        <p className=\"stock\">Stock: {product.stock}</p>\r\n                        <p className=\"description\">{product.description}</p>\r\n                        <div className=\"product-actions\">\r\n                          <button \r\n                            className=\"edit-btn\"\r\n                            onClick={() => startEditProduct(product)}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button \r\n                            className=\"delete-product-btn\"\r\n                            onClick={() => deleteProduct(product._id, product.name)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"scroll-controls\">\r\n              <button className=\"scroll-to-top\" onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>\r\n                ↑ Back to Top\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCategories;"],"names":["API_BASE","process","REACT_APP_API_BASE_URL","AdminCategories","categories","setCategories","useState","loading","setLoading","error","setError","debugInfo","setDebugInfo","newCategoryName","setNewCategoryName","parentCategory","setParentCategory","creating","setCreating","selectedCategory","setSelectedCategory","categoryProducts","setCategoryProducts","loadingProducts","setLoadingProducts","editingProduct","setEditingProduct","editFormData","setEditFormData","expandedCategories","setExpandedCategories","Set","makeAuthenticatedRequest","useAuth","productsRef","useRef","useEffect","fetchCategories","fetchDebugInfo","async","data","concat","message","renderCategoryTree","tree","level","arguments","length","undefined","Object","entries","map","_ref","key","value","hasChildren","keys","children","isExpanded","has","name","indentStyle","marginLeft","_jsxs","className","style","_jsx","onClick","categoryName","newExpanded","delete","add","toggleExpanded","product_count","total_stock","viewCategoryProducts","disabled","_categories$find","subcategoryCount","filter","cat","startsWith","hasProducts","find","window","confirm","encodedName","encodeURIComponent","result","method","alert","deleteCategory","products","setTimeout","_productsRef$current","current","scrollIntoView","behavior","block","cancelEdit","backgroundColor","padding","marginBottom","borderRadius","fontSize","total_products","color","onSubmit","e","preventDefault","trim","body","JSON","stringify","parent","onChange","target","getParentOptions","parents","split","slice","join","Boolean","roots","includes","sort","type","placeholder","textAlign","display","getHierarchicalCategories","forEach","parts","part","index","fullPath","c","ref","product","_id","_objectSpread","description","rows","step","price","parseFloat","stock","parseInt","image_url","productId","saveProduct","_Fragment","src","alt","startEditProduct","productName","deleteProduct","scrollTo","top"],"sourceRoot":""}