{"version":3,"file":"static/js/665.139004ed.chunk.js","mappings":"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","sources":["components/admin/ProductForm.js","components/admin/AdminProducts.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useToastContext } from '../toast';\r\nimport SecureForm from '../SecureForm';\r\nimport { csrfManager } from '../../utils/csrf';\r\n\r\n\r\nconst ProductForm = ({\r\n  product,\r\n  categories = [],\r\n  onSave,\r\n  onCancel,\r\n  isEdit = false,\r\n}) => {\r\n  const { makeAuthenticatedRequest } = useAuth();\r\n  const { showToast } = useToastContext();\r\n  const [categoryType, setCategoryType] = useState(\"existing\");\r\n  const [customCategory, setCustomCategory] = useState(\"\");\r\n\r\n  const handleSubmit = async (sanitizedData, csrfToken) => {\r\n    try {\r\n      const url = isEdit\r\n        ? `${process.env.REACT_APP_API_BASE_URL}/admin/products/${product._id}`\r\n        : `${process.env.REACT_APP_API_BASE_URL}/products`;\r\n\r\n      const method = isEdit ? \"PUT\" : \"POST\";\r\n\r\n      const productData = {\r\n        ...sanitizedData,\r\n        price: parseFloat(sanitizedData.price),\r\n        stock: parseInt(sanitizedData.stock),\r\n        category: categoryType === \"existing\" ? sanitizedData.category : customCategory\r\n      };\r\n\r\n      if (isEdit) {\r\n        await makeAuthenticatedRequest(url, {\r\n          method,\r\n          body: JSON.stringify(productData),\r\n        });\r\n      } else {\r\n        const response = await csrfManager.makeSecureRequest(url, {\r\n          method,\r\n          headers: {\r\n            'X-CSRF-Token': csrfToken,\r\n          },\r\n          body: JSON.stringify(productData),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.detail || 'Failed to save product');\r\n        }\r\n      }\r\n\r\n      showToast(\r\n        isEdit ? \"Product updated successfully\" : \"Product added successfully\",\r\n        \"success\"\r\n      );\r\n      onSave();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-form-overlay\">\r\n      <div className=\"product-form-container\">\r\n        <div className=\"product-form\">\r\n          <h3>{isEdit ? \"Edit Product\" : \"Add New Product\"}</h3>\r\n          <SecureForm onSubmit={handleSubmit} validate={true}>\r\n            <label htmlFor=\"name\">Product Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Product Name\"\r\n              defaultValue={product?.name || \"\"}\r\n              minLength=\"1\"\r\n              maxLength=\"200\"\r\n              required\r\n            />\r\n            \r\n            <label htmlFor=\"description\">Description:</label>\r\n            <textarea\r\n              name=\"description\"\r\n              placeholder=\"Product Description (min 10 characters)\"\r\n              defaultValue={product?.description || \"\"}\r\n              minLength=\"10\"\r\n              maxLength=\"2000\"\r\n              required\r\n            />\r\n            \r\n            <label htmlFor=\"price\">Price:</label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              min=\"0.01\"\r\n              max=\"999999.99\"\r\n              name=\"price\"\r\n              placeholder=\"Price\"\r\n              defaultValue={product?.price || \"\"}\r\n              required\r\n            />\r\n\r\n            <div className=\"category-section\">\r\n              <label>Category Selection:</label>\r\n              <select\r\n                value={categoryType}\r\n                onChange={(e) => setCategoryType(e.target.value)}\r\n                className=\"category-select\"\r\n              >\r\n                <option value=\"existing\">Select Existing Category</option>\r\n                <option value=\"new\">Create New Category</option>\r\n              </select>\r\n\r\n              {categoryType === \"existing\" ? (\r\n                <select\r\n                  name=\"category\"\r\n                  defaultValue={product?.category || \"\"}\r\n                  required\r\n                  className=\"category-select\"\r\n                >\r\n                  <option value=\"\">Choose Category</option>\r\n                  {categories.map((cat) => (\r\n                    <option key={cat} value={cat}>\r\n                      {cat}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter new category (use / for subcategories)\"\r\n                  value={customCategory}\r\n                  onChange={(e) => setCustomCategory(e.target.value)}\r\n                  maxLength=\"100\"\r\n                  required\r\n                />\r\n              )}\r\n            </div>\r\n            \r\n            <label htmlFor=\"image_url\">Image URL:</label>\r\n            <input\r\n              type=\"url\"\r\n              name=\"image_url\"\r\n              placeholder=\"Image URL\"\r\n              defaultValue={product?.image_url || \"\"}\r\n              maxLength=\"500\"\r\n              required\r\n            />\r\n            \r\n            <label htmlFor=\"stock\">Stock Quantity:</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"999999\"\r\n              name=\"stock\"\r\n              placeholder=\"Stock Quantity\"\r\n              defaultValue={product?.stock || \"\"}\r\n              required\r\n            />\r\n            \r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                {isEdit ? \"Update Product\" : \"Add Product\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onCancel}\r\n                className=\"btn btn-outline\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </SecureForm>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductForm;","import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useToastContext } from '../toast';\r\nimport ProductForm from './ProductForm';\r\nimport '../../styles/pages/admin.css';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst AdminProducts = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const { makeAuthenticatedRequest } = useAuth();\r\n  const { showToast } = useToastContext();\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/admin/products`);\r\n      setProducts(data.products || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch products:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/admin/categories`);\r\n      const categoryNames = data.categories?.map(cat => cat.name).sort() || [];\r\n      setCategories(categoryNames);\r\n    } catch (error) {\r\n      console.error('Failed to fetch categories:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (productId) => {\r\n    if (!window.confirm('Are you sure you want to delete this product?')) return;\r\n\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/admin/products/${productId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      showToast('Product deleted successfully', 'success');\r\n      fetchProducts();\r\n      fetchCategories();\r\n    } catch (error) {\r\n      console.error('Failed to delete product:', error);\r\n      showToast('Failed to delete product', 'error');\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    setEditingProduct(null);\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  const handleEditProduct = (product) => {\r\n    setShowAddForm(false);\r\n    setEditingProduct(product);\r\n  };\r\n\r\n  const closeModals = () => {\r\n    setShowAddForm(false);\r\n    setEditingProduct(null);\r\n  };\r\n\r\n  if (loading) return <div className=\"container\"><p>Loading products...</p></div>;\r\n\r\n  return (\r\n    <div className=\"admin-products\">\r\n      <div className=\"container\">\r\n        <div className=\"products-header\">\r\n          <h1>Product Management</h1>\r\n          <button\r\n            onClick={handleAddProduct}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Add New Product\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add Product Modal */}\r\n        {showAddForm && (\r\n          <ProductForm\r\n            categories={categories}\r\n            onSave={() => {\r\n              closeModals();\r\n              fetchProducts();\r\n              fetchCategories();\r\n            }}\r\n            onCancel={closeModals}\r\n          />\r\n        )}\r\n\r\n        {/* Edit Product Modal */}\r\n        {editingProduct && (\r\n          <ProductForm\r\n            product={editingProduct}\r\n            categories={categories}\r\n            onSave={() => {\r\n              closeModals();\r\n              fetchProducts();\r\n              fetchCategories();\r\n            }}\r\n            onCancel={closeModals}\r\n            isEdit={true}\r\n          />\r\n        )}\r\n\r\n        <div className=\"products-grid\">\r\n          {products.map((product) => (\r\n            <div key={product._id} className=\"admin-product-card\">\r\n              <img src={product.image_url} alt={product.name} />\r\n              <div className=\"product-info\">\r\n                <h3>{product.name}</h3>\r\n                <p className=\"description\">{product.description}</p>\r\n                <p>\r\n                  <strong>Price:</strong> ${product.price}\r\n                </p>\r\n                <p>\r\n                  <strong>Category:</strong> {product.category}\r\n                </p>\r\n                <p className={`stock ${product.stock < 10 ? \"low-stock\" : \"\"}`}>\r\n                  <strong>Stock:</strong> {product.stock}\r\n                  {product.stock < 10 && \" ⚠️\"}\r\n                </p>\r\n              </div>\r\n              <div className=\"product-actions\">\r\n                <button\r\n                  onClick={() => handleEditProduct(product)}\r\n                  className=\"btn btn-outline\"\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => deleteProduct(product._id)}\r\n                  className=\"btn btn-danger\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {products.length === 0 && (\r\n          <div className=\"no-products\">\r\n            <p>No products found.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProducts;"],"names":["_ref","product","categories","onSave","onCancel","isEdit","makeAuthenticatedRequest","useAuth","showToast","useToastContext","categoryType","setCategoryType","useState","customCategory","setCustomCategory","_jsx","className","children","_jsxs","SecureForm","onSubmit","async","sanitizedData","csrfToken","url","concat","process","REACT_APP_API_BASE_URL","_id","method","productData","_objectSpread","price","parseFloat","stock","parseInt","category","body","JSON","stringify","response","csrfManager","makeSecureRequest","headers","ok","error","json","Error","detail","validate","htmlFor","type","name","placeholder","defaultValue","minLength","maxLength","required","description","step","min","max","value","onChange","e","target","map","cat","image_url","onClick","API_BASE","AdminProducts","products","setProducts","setCategories","loading","setLoading","editingProduct","setEditingProduct","showAddForm","setShowAddForm","useEffect","fetchProducts","fetchCategories","data","_data$categories","categoryNames","sort","closeModals","handleAddProduct","ProductForm","src","alt","handleEditProduct","window","confirm","productId","deleteProduct","length"],"sourceRoot":""}