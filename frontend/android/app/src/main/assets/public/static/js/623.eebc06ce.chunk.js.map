{"version":3,"file":"static/js/623.eebc06ce.chunk.js","mappings":"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","sources":["components/TwoFactor/TwoFactorSetup.js","components/profile/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useToastContext } from '../toast';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst TwoFactorSetup = ({ onClose, onComplete }) => {\r\n  const [step, setStep] = useState(1);\r\n  const [method, setMethod] = useState('');\r\n  const [qrCode, setQrCode] = useState('');\r\n  const [secret, setSecret] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [backupCodes, setBackupCodes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { makeAuthenticatedRequest } = useAuth(); // ✅ Use session auth\r\n  const { showToast } = useToastContext();\r\n\r\n  const chooseMethod = async (selectedMethod) => {\r\n    setLoading(true);\r\n    setMethod(selectedMethod);\r\n    \r\n    try {\r\n      // ✅ Use makeAuthenticatedRequest instead of fetch\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/auth/setup-2fa`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({ method: selectedMethod })\r\n      });\r\n      \r\n      if (selectedMethod === 'app') {\r\n        setQrCode(data.qr_code);\r\n        setSecret(data.secret);\r\n      } else {\r\n        showToast('Verification code sent to your email', 'success');\r\n      }\r\n      setStep(3);\r\n    } catch (error) {\r\n      showToast(error.message || 'Failed to setup 2FA', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const verifySetup = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // ✅ Use makeAuthenticatedRequest\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/auth/verify-2fa-setup`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({ code: verificationCode })\r\n      });\r\n\r\n      setBackupCodes(data.backup_codes);\r\n      setStep(4);\r\n      showToast('2FA enabled successfully!', 'success');\r\n    } catch (error) {\r\n      showToast(error.message || 'Invalid code', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resendEmailCode = async () => {\r\n    if (method !== 'email') return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      await chooseMethod('email');\r\n      showToast('New code sent to your email', 'success');\r\n    } catch (error) {\r\n      showToast('Failed to send code', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Rest of component remains the same...\r\n  return (\r\n    <div className=\"product-form-overlay\">\r\n      <div className=\"auth-form\" style={{ maxWidth: '500px' }}>\r\n        <button onClick={onClose} style={{ float: 'right', background: 'none', border: 'none', fontSize: '1.5rem' }}>\r\n          ×\r\n        </button>\r\n\r\n        {step === 1 && (\r\n          <>\r\n            <h2>🔐 Enable Two-Factor Authentication</h2>\r\n            <p>Choose your preferred 2FA method:</p>\r\n            \r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem', margin: '2rem 0' }}>\r\n              <button \r\n                onClick={() => chooseMethod('app')} \r\n                className=\"btn btn-primary\"\r\n                disabled={loading}\r\n                style={{ padding: '1rem', display: 'flex', alignItems: 'center', gap: '0.5rem' }}\r\n              >\r\n                📱 Authenticator App\r\n                <small style={{ display: 'block', opacity: 0.8 }}>\r\n                  Google Authenticator, Authy, etc.\r\n                </small>\r\n              </button>\r\n              \r\n              <button \r\n                onClick={() => chooseMethod('email')} \r\n                className=\"btn btn-outline\"\r\n                disabled={loading}\r\n                style={{ padding: '1rem', display: 'flex', alignItems: 'center', gap: '0.5rem' }}\r\n              >\r\n                📧 Email Codes\r\n                <small style={{ display: 'block', opacity: 0.8 }}>\r\n                  Receive codes via email\r\n                </small>\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {step === 3 && method === 'app' && (\r\n          <>\r\n            <h2>📱 Scan QR Code</h2>\r\n            <div style={{ textAlign: 'center', margin: '20px 0' }}>\r\n              <img src={qrCode} alt=\"2FA QR Code\" style={{ maxWidth: '200px' }} />\r\n            </div>\r\n            <p><strong>Manual entry key:</strong> <code>{secret}</code></p>\r\n            <p>Enter the 6-digit code from your authenticator app:</p>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"000000\"\r\n              value={verificationCode}\r\n              onChange={(e) => setVerificationCode(e.target.value)}\r\n              maxLength=\"6\"\r\n            />\r\n            <button \r\n              onClick={verifySetup} \r\n              className=\"btn btn-primary\"\r\n              disabled={loading || verificationCode.length !== 6}\r\n            >\r\n              {loading ? 'Verifying...' : 'Verify & Enable 2FA'}\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {step === 3 && method === 'email' && (\r\n          <>\r\n            <h2>📧 Email Verification</h2>\r\n            <p>We've sent a 6-digit code to your email address.</p>\r\n            <p>Enter the code below:</p>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"000000\"\r\n              value={verificationCode}\r\n              onChange={(e) => setVerificationCode(e.target.value)}\r\n              maxLength=\"6\"\r\n            />\r\n            <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n              <button \r\n                onClick={verifySetup} \r\n                className=\"btn btn-primary\"\r\n                disabled={loading || verificationCode.length !== 6}\r\n                style={{ flex: 1 }}\r\n              >\r\n                {loading ? 'Verifying...' : 'Verify Code'}\r\n              </button>\r\n              <button \r\n                onClick={resendEmailCode} \r\n                className=\"btn btn-outline\"\r\n                disabled={loading}\r\n              >\r\n                Resend\r\n              </button>\r\n            </div>\r\n            <p style={{ fontSize: '0.9rem', color: '#666', marginTop: '1rem' }}>\r\n              Code expires in 5 minutes\r\n            </p>\r\n          </>\r\n        )}\r\n\r\n        {step === 4 && (\r\n          <>\r\n            <h2>✅ 2FA Enabled Successfully!</h2>\r\n            <p><strong>⚠️ Save these backup codes:</strong></p>\r\n            <div style={{ background: '#f8f9fa', padding: '15px', borderRadius: '5px', margin: '15px 0' }}>\r\n              {backupCodes.map((code, index) => (\r\n                <div key={index} style={{ fontFamily: 'monospace', margin: '5px 0' }}>\r\n                  {code}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <p style={{ fontSize: '0.9rem', color: '#666' }}>\r\n              Store these codes safely. You can use them if you lose access to your {method === 'app' ? 'authenticator app' : 'email'}.\r\n            </p>\r\n            <button onClick={() => { onComplete(); onClose(); }} className=\"btn btn-primary\">\r\n              Done\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TwoFactorSetup;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useToastContext } from '../toast';\r\nimport TwoFactorSetup from '../TwoFactor/TwoFactorSetup';\r\n\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst Profile = () => {\r\n  const { user, makeAuthenticatedRequest, login, refetchUser } = useAuth();\r\n  const { showToast } = useToastContext();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isChangingAvatar, setIsChangingAvatar] = useState(false);\r\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\r\n  const [showTwoFactorSetup, setShowTwoFactorSetup] = useState(false);\r\n  const [disabling2FA, setDisabling2FA] = useState(false);\r\n  const [sendingVerification, setSendingVerification] = useState(false);\r\n  const [availableAvatars, setAvailableAvatars] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploadingAvatar, setUploadingAvatar] = useState(false);\r\n  const [passwordLoading, setPasswordLoading] = useState(false);\r\n  const [step, setStep] = useState(1);\r\n  const [sendingDisableCode, setSendingDisableCode] = useState(false);\r\n  const [recaptchaLoaded, setRecaptchaLoaded] = useState(false);\r\n  const [recaptchaWidgetId, setRecaptchaWidgetId] = useState(null);\r\n  \r\n  const recaptchaRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  \r\n  const [formData, setFormData] = useState({\r\n    full_name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    profile_image_url: ''\r\n  });\r\n\r\n  const [passwordData, setPasswordData] = useState({\r\n    old_password: '',\r\n    new_password: '',\r\n    confirm_password: ''\r\n  });\r\n\r\n  const [disable2FAForm, setDisable2FAForm] = useState({ \r\n    password: '', \r\n    code: '' \r\n  });\r\n\r\n  const [passwordErrors, setPasswordErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFormData({\r\n        full_name: user.full_name || '',\r\n        email: user.email || '',\r\n        phone: user.phone || '',\r\n        address: user.address || '',\r\n        profile_image_url: user.profile_image_url || ''\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const loadRecaptcha = () => {\r\n      if (window.grecaptcha) {\r\n        setRecaptchaLoaded(true);\r\n        return;\r\n      }\r\n\r\n      const script = document.createElement('script');\r\n      script.src = 'https://www.google.com/recaptcha/api.js?onload=onRecaptchaLoad&render=explicit';\r\n      script.async = true;\r\n      script.defer = true;\r\n\r\n      window.onRecaptchaLoad = () => {\r\n        setRecaptchaLoaded(true);\r\n      };\r\n\r\n      document.head.appendChild(script);\r\n\r\n      return () => {\r\n        if (document.head.contains(script)) {\r\n          document.head.removeChild(script);\r\n        }\r\n        delete window.onRecaptchaLoad;\r\n      };\r\n    };\r\n\r\n    loadRecaptcha();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (recaptchaLoaded && isChangingPassword && recaptchaRef.current && !recaptchaWidgetId) {\r\n      try {\r\n        const widgetId = window.grecaptcha.render(recaptchaRef.current, {\r\n          sitekey: process.env.REACT_APP_RECAPTCHA_SITE_KEY,\r\n          callback: (response) => {\r\n            console.log('reCAPTCHA completed:', response);\r\n          },\r\n          'expired-callback': () => {\r\n            console.log('reCAPTCHA expired');\r\n            showToast('reCAPTCHA expired. Please complete it again.', 'warning');\r\n          }\r\n        });\r\n        setRecaptchaWidgetId(widgetId);\r\n      } catch (error) {\r\n        console.error('reCAPTCHA render error:', error);\r\n        showToast('Failed to load reCAPTCHA. Please refresh the page.', 'error');\r\n      }\r\n    }\r\n  }, [recaptchaLoaded, isChangingPassword, showToast]);\r\n\r\n  useEffect(() => {\r\n    if (!isChangingPassword && recaptchaWidgetId !== null) {\r\n      try {\r\n        if (window.grecaptcha) {\r\n          window.grecaptcha.reset(recaptchaWidgetId);\r\n        }\r\n        setRecaptchaWidgetId(null);\r\n      } catch (error) {\r\n        console.error('reCAPTCHA reset error:', error);\r\n      }\r\n    }\r\n  }, [isChangingPassword, recaptchaWidgetId]);\r\n\r\n  const sendVerificationEmail = async () => {\r\n    setSendingVerification(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE}/auth/resend-verification`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email: user.email })\r\n      });\r\n\r\n      if (response.ok) {\r\n        showToast('Verification email sent! Check your inbox.', 'success');\r\n      } else {\r\n        const data = await response.json();\r\n        showToast(data.detail || 'Failed to send verification email', 'error');\r\n      }\r\n    } catch (error) {\r\n      showToast('Failed to send verification email', 'error');\r\n    } finally {\r\n      setSendingVerification(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPasswordData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    if (passwordErrors[name]) {\r\n      setPasswordErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validatePasswordForm = () => {\r\n    const errors = {};\r\n    \r\n    if (!passwordData.old_password) {\r\n      errors.old_password = 'Current password is required';\r\n    }\r\n    \r\n    if (!passwordData.new_password) {\r\n      errors.new_password = 'New password is required';\r\n    } else if (passwordData.new_password.length < 10) {\r\n      errors.new_password = 'Password must be at least 10 characters long';\r\n    } else if (!/[A-Z]/.test(passwordData.new_password)) {\r\n      errors.new_password = 'Password must contain at least one uppercase letter';\r\n    } else if (!/[!@#$%^&*()_+\\-=\\[\\]{}|;:,.<>?]/.test(passwordData.new_password)) {\r\n      errors.new_password = 'Password must contain at least one special character';\r\n    }\r\n    \r\n    if (!passwordData.confirm_password) {\r\n      errors.confirm_password = 'Please confirm your new password';\r\n    } else if (passwordData.new_password !== passwordData.confirm_password) {\r\n      errors.confirm_password = 'Passwords do not match';\r\n    }\r\n    \r\n    if (passwordData.old_password && passwordData.new_password && \r\n        passwordData.old_password === passwordData.new_password) {\r\n      errors.new_password = 'New password must be different from current password';\r\n    }\r\n    \r\n    setPasswordErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleChangePassword = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validatePasswordForm()) {\r\n      return;\r\n    }\r\n\r\n    let recaptchaResponse = '';\r\n    try {\r\n      if (recaptchaWidgetId !== null) {\r\n        recaptchaResponse = window.grecaptcha.getResponse(recaptchaWidgetId);\r\n      }\r\n    } catch (error) {\r\n      console.error('reCAPTCHA error:', error);\r\n    }\r\n\r\n    if (!recaptchaResponse) {\r\n      showToast('Please complete the reCAPTCHA verification', 'error');\r\n      return;\r\n    }\r\n    \r\n    setPasswordLoading(true);\r\n\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/auth/change-password`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          ...passwordData,\r\n          recaptcha_response: recaptchaResponse\r\n        })\r\n      });\r\n\r\n      showToast('Password changed successfully!', 'success');\r\n      setIsChangingPassword(false);\r\n      setPasswordData({\r\n        old_password: '',\r\n        new_password: '',\r\n        confirm_password: ''\r\n      });\r\n      setPasswordErrors({});\r\n      \r\n      if (recaptchaWidgetId !== null) {\r\n        window.grecaptcha.reset(recaptchaWidgetId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Password change error:', error);\r\n      showToast(error.message || 'Failed to change password', 'error');\r\n      \r\n      if (recaptchaWidgetId !== null) {\r\n        window.grecaptcha.reset(recaptchaWidgetId);\r\n      }\r\n    } finally {\r\n      setPasswordLoading(false);\r\n    }\r\n  };\r\n\r\n  const requestDisableCode = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (user?.two_factor_method === 'app') {\r\n      setStep(2);\r\n      return;\r\n    }\r\n\r\n    setSendingDisableCode(true);\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/auth/send-disable-2fa-code`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({ password: disable2FAForm.password })\r\n      });\r\n\r\n      showToast('Verification code sent to your email', 'success');\r\n      setStep(2);\r\n    } catch (error) {\r\n      showToast(error.message || 'Failed to send code', 'error');\r\n    } finally {\r\n      setSendingDisableCode(false);\r\n    }\r\n  };\r\n\r\n  const disable2FA = async (e) => {\r\n    e.preventDefault();\r\n    setDisabling2FA(true);\r\n\r\n    try {\r\n      await makeAuthenticatedRequest(`${API_BASE}/auth/disable-2fa`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(disable2FAForm)\r\n      });\r\n\r\n      showToast('2FA disabled successfully', 'success');\r\n      setDisable2FAForm({ password: '', code: '' });\r\n      setStep(1);\r\n      refetchUser();\r\n    } catch (error) {\r\n      showToast(error.message || 'Failed to disable 2FA', 'error');\r\n    } finally {\r\n      setDisabling2FA(false);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setIsEditing(false);\r\n    if (user) {\r\n      setFormData({\r\n        full_name: user.full_name || '',\r\n        email: user.email || '',\r\n        phone: user.phone || '',\r\n        address: user.address || '',\r\n        profile_image_url: user.profile_image_url || ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancelPasswordChange = () => {\r\n    setIsChangingPassword(false);\r\n    setPasswordData({\r\n      old_password: '',\r\n      new_password: '',\r\n      confirm_password: ''\r\n    });\r\n    setPasswordErrors({});\r\n    \r\n    if (recaptchaWidgetId !== null) {\r\n      try {\r\n        window.grecaptcha.reset(recaptchaWidgetId);\r\n      } catch (error) {\r\n        console.error('reCAPTCHA reset error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // NEW: Avatar upload functionality\r\n  const handleChangeAvatar = async () => {\r\n    try {\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/uploads/avatar/samples`);\r\n      setAvailableAvatars(data.avatars);\r\n      setIsChangingAvatar(true);\r\n    } catch (error) {\r\n      console.error('Avatar loading error:', error);\r\n      showToast('Failed to load avatar options', 'error');\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (!file.type.startsWith('image/')) {\r\n      showToast('Please select an image file', 'error');\r\n      return;\r\n    }\r\n\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      showToast('File too large. Max size is 5MB', 'error');\r\n      return;\r\n    }\r\n\r\n    setUploadingAvatar(true);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      const response = await makeAuthenticatedRequest(`${API_BASE}/uploads/avatar`, {\r\n        method: 'POST',\r\n        body: formData,\r\n        headers: {} // Don't set Content-Type for FormData\r\n      });\r\n\r\n      const updatedUser = { ...user, profile_image_url: response.avatar_url };\r\n      login(updatedUser);\r\n      \r\n      showToast('Avatar uploaded successfully!', 'success');\r\n      setIsChangingAvatar(false);\r\n    } catch (error) {\r\n      showToast(error.message || 'Upload failed', 'error');\r\n    } finally {\r\n      setUploadingAvatar(false);\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const triggerFileUpload = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const handleSelectAvatar = async (avatarUrl) => {\r\n    setLoading(true);\r\n    try {\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/auth/update-profile`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({ profile_image_url: avatarUrl })\r\n      });\r\n\r\n      login(data.user);\r\n      showToast('Avatar updated successfully!', 'success');\r\n      setIsChangingAvatar(false);\r\n      setFormData(prev => ({ ...prev, profile_image_url: avatarUrl }));\r\n    } catch (error) {\r\n      console.error('Avatar update error:', error);\r\n      showToast('Failed to update avatar', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getDisplayAvatar = () => {\r\n    if (user?.profile_image_url) {\r\n      return user.profile_image_url;\r\n    }\r\n    return `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'default'}`;\r\n  };\r\n\r\n  const canChangePassword = user && !user.google_id;\r\n\r\n  const handleSaveProfile = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = await makeAuthenticatedRequest(`${API_BASE}/auth/update-profile`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      login(data.user);\r\n      showToast('Profile updated successfully!', 'success');\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n      showToast(error.message || 'Failed to update profile', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"container\">\r\n        <div className=\"profile-header\">\r\n          <h1>My Profile</h1>\r\n        </div>\r\n        \r\n        <div className=\"profile-avatar-section\">\r\n          <div className=\"avatar-container\">\r\n            <img \r\n              src={getDisplayAvatar()} \r\n              alt=\"Profile Avatar\" \r\n              className=\"profile-avatar\"\r\n              onError={(e) => {\r\n                e.target.src = `https://api.dicebear.com/7.x/avataaars/svg?seed=${user?.username || 'default'}`;\r\n              }}\r\n            />\r\n            <button \r\n              onClick={handleChangeAvatar}\r\n              className=\"change-avatar-btn\"\r\n              disabled={loading}\r\n            >\r\n              Change Avatar\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* UPDATED: Avatar modal with upload functionality */}\r\n        {isChangingAvatar && (\r\n          <div className=\"avatar-modal-overlay\">\r\n            <div className=\"avatar-modal\">\r\n              <h3>Choose Your Avatar</h3>\r\n              \r\n              {/* Upload Custom Avatar */}\r\n              <div className=\"upload-section\" style={{ marginBottom: '2rem' }}>\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  onChange={handleFileUpload}\r\n                  accept=\"image/*\"\r\n                  style={{ display: 'none' }}\r\n                />\r\n                <button\r\n                  onClick={triggerFileUpload}\r\n                  disabled={uploadingAvatar}\r\n                  className=\"btn btn-primary\"\r\n                  style={{\r\n                    width: '100%',\r\n                    padding: '1rem',\r\n                    marginBottom: '1rem',\r\n                    backgroundColor: '#28a745',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    gap: '0.5rem'\r\n                  }}\r\n                >\r\n                  {uploadingAvatar ? (\r\n                    <>⏳ Uploading...</>\r\n                  ) : (\r\n                    <>📁 Upload Custom Avatar</>\r\n                  )}\r\n                </button>\r\n                <p style={{ fontSize: '0.9rem', color: '#666', textAlign: 'center' }}>\r\n                  Max 5MB • JPG, PNG, GIF, WebP\r\n                </p>\r\n              </div>\r\n\r\n              {/* Divider */}\r\n              <div style={{ \r\n                textAlign: 'center', \r\n                margin: '1rem 0',\r\n                borderBottom: '1px solid #ddd',\r\n                paddingBottom: '1rem'\r\n              }}>\r\n                <span style={{ \r\n                  backgroundColor: 'white', \r\n                  padding: '0 1rem', \r\n                  color: '#666' \r\n                }}>\r\n                  or choose from samples\r\n                </span>\r\n              </div>\r\n              \r\n              {/* Sample Avatars */}\r\n              <div className=\"avatar-grid\">\r\n                {availableAvatars.map((avatar, index) => (\r\n                  <img\r\n                    key={index}\r\n                    src={avatar}\r\n                    alt={`Avatar option ${index + 1}`}\r\n                    className=\"avatar-option\"\r\n                    onClick={() => handleSelectAvatar(avatar)}\r\n                    style={{ cursor: loading ? 'not-allowed' : 'pointer' }}\r\n                  />\r\n                ))}\r\n              </div>\r\n              \r\n              <button \r\n                onClick={() => setIsChangingAvatar(false)}\r\n                className=\"btn btn-outline\"\r\n                disabled={loading || uploadingAvatar}\r\n                style={{ marginTop: '1rem' }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"profile-content\">\r\n          <div className=\"profile-info\">\r\n            {isEditing ? (\r\n              <form onSubmit={handleSaveProfile} className=\"profile-edit-form\">\r\n                <div className=\"form-group\">\r\n                  <label>Full Name:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"full_name\"\r\n                    value={formData.full_name}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Enter your full name\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Email:</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Enter your email\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Phone:</label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    value={formData.phone}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Enter your phone number\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Address:</label>\r\n                  <textarea\r\n                    name=\"address\"\r\n                    value={formData.address}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Enter your address\"\r\n                    rows=\"3\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-actions\">\r\n                  <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\"\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? 'Saving...' : 'Save Changes'}\r\n                  </button>\r\n                  <button \r\n                    type=\"button\" \r\n                    onClick={handleCancelEdit}\r\n                    className=\"btn btn-outline\"\r\n                    disabled={loading}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <>\r\n                <div className=\"info-group\">\r\n                  <label>Email:</label>\r\n                  <div className=\"email-info\">\r\n                    <span>{user?.email}</span>\r\n                    {user?.email_verified ? (\r\n                      <span className=\"verification-badge verified\">✅ Verified</span>\r\n                    ) : (\r\n                      <div className=\"unverified-section\">\r\n                        <span className=\"verification-badge unverified\">❌ Unverified</span>\r\n                        <div style={{ display: 'flex', gap: '0.5rem', marginTop: '0.5rem' }}>\r\n                          <button \r\n                            onClick={sendVerificationEmail}\r\n                            className=\"btn btn-sm btn-outline\"\r\n                            disabled={sendingVerification}\r\n                            style={{ flex: 0 }}\r\n                          >\r\n                            {sendingVerification ? 'Sending...' : 'Resend'}\r\n                          </button>\r\n                          <button \r\n                            onClick={() => window.location.href = '/verify-email'}\r\n                            className=\"btn btn-sm btn-primary\"\r\n                            style={{ flex: 2 }}\r\n                          >\r\n                            Verify Code\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {user?.is_admin && (\r\n                  <div className=\"info-group\">\r\n                    <label>Role:</label>\r\n                    <span style={{ color: '#dc3545', fontWeight: 'bold' }}>Administrator</span>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"profile-actions\">\r\n                  <button \r\n                    onClick={() => setIsEditing(true)}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Edit Profile\r\n                  </button>\r\n                  {canChangePassword && (\r\n                    <button \r\n                      onClick={() => setIsChangingPassword(true)}\r\n                      className=\"btn btn-outline\"\r\n                    >\r\n                      Change Password\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {isChangingPassword && canChangePassword && (\r\n            <div className=\"password-change-section\">\r\n              <h3>Change Password</h3>\r\n              {!recaptchaLoaded && (\r\n                <div className=\"loading-recaptcha\">\r\n                  <p>Loading security verification...</p>\r\n                </div>\r\n              )}\r\n              <form onSubmit={handleChangePassword} className=\"password-change-form\">\r\n                <div className=\"form-group\">\r\n                  <label>Current Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"old_password\"\r\n                    value={passwordData.old_password}\r\n                    onChange={handlePasswordChange}\r\n                    placeholder=\"Enter your current password\"\r\n                    className={passwordErrors.old_password ? 'error' : ''}\r\n                  />\r\n                  {passwordErrors.old_password && (\r\n                    <span className=\"error-text\">{passwordErrors.old_password}</span>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>New Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"new_password\"\r\n                    value={passwordData.new_password}\r\n                    onChange={handlePasswordChange}\r\n                    placeholder=\"Min 10 chars, 1 uppercase, 1 special character\"\r\n                    className={passwordErrors.new_password ? 'error' : ''}\r\n                  />\r\n                  {passwordErrors.new_password && (\r\n                    <span className=\"error-text\">{passwordErrors.new_password}</span>\r\n                  )}\r\n                  <small style={{ color: '#666', fontSize: '0.8rem', display: 'block', marginTop: '4px' }}>\r\n                    Must contain: 10+ characters, uppercase letter, special character (!@#$%^&*...)\r\n                  </small>\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                  <label>Confirm New Password:</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"confirm_password\"\r\n                    value={passwordData.confirm_password}\r\n                    onChange={handlePasswordChange}\r\n                    placeholder=\"Confirm your new password\"\r\n                    className={passwordErrors.confirm_password ? 'error' : ''}\r\n                  />\r\n                  {passwordErrors.confirm_password && (\r\n                    <span className=\"error-text\">{passwordErrors.confirm_password}</span>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Security Verification:</label>\r\n                  <div \r\n                    ref={recaptchaRef}\r\n                    style={{ margin: '10px 0' }}\r\n                  ></div>\r\n                  {!recaptchaLoaded && (\r\n                    <p style={{ color: '#666', fontSize: '0.9rem' }}>\r\n                      Please wait for security verification to load...\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-actions\">\r\n                  <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\"\r\n                    disabled={passwordLoading || !recaptchaLoaded}\r\n                  >\r\n                    {passwordLoading ? 'Changing...' : 'Change Password'}\r\n                  </button>\r\n                  <button \r\n                    type=\"button\" \r\n                    onClick={handleCancelPasswordChange}\r\n                    className=\"btn btn-outline\"\r\n                    disabled={passwordLoading}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"security-section\">\r\n            <h2>🔐 Security Settings</h2>\r\n            <p>Manage your account security and two-factor authentication:</p>\r\n            \r\n            {!user?.two_factor_enabled ? (\r\n              <div className=\"security-actions\">\r\n                <button \r\n                  onClick={() => setShowTwoFactorSetup(true)}\r\n                  className=\"btn btn-primary\"\r\n                  disabled={!user?.email_verified}\r\n                >\r\n                  🔐 Enable Two-Factor Authentication\r\n                </button>\r\n                {!user?.email_verified && (\r\n                  <p className=\"security-notice\">\r\n                    ⚠️ You must verify your email before enabling 2FA\r\n                  </p>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"security-actions\">\r\n                <p className=\"security-status\">\r\n                  ✅ Two-factor authentication is enabled ({user?.two_factor_method === 'email' ? 'Email' : 'App'})\r\n                </p>\r\n                \r\n                {step === 1 ? (\r\n                  <form onSubmit={requestDisableCode} className=\"disable-2fa-form\">\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Enter your password\"\r\n                      value={disable2FAForm.password}\r\n                      onChange={(e) => setDisable2FAForm({...disable2FAForm, password: e.target.value})}\r\n                      required\r\n                    />\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"btn btn-primary\"\r\n                      disabled={sendingDisableCode}\r\n                    >\r\n                      {sendingDisableCode ? 'Sending...' : '📧 Request Code'}\r\n                    </button>\r\n                  </form>\r\n                ) : (\r\n                  <form onSubmit={disable2FA} className=\"disable-2fa-form\">\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Current Password\"\r\n                      value={disable2FAForm.password}\r\n                      onChange={(e) => setDisable2FAForm({...disable2FAForm, password: e.target.value})}\r\n                      required\r\n                      disabled\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder={user?.two_factor_method === 'email' ? 'Email Code' : 'Authenticator Code'}\r\n                      value={disable2FAForm.code}\r\n                      onChange={(e) => setDisable2FAForm({...disable2FAForm, code: e.target.value})}\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                    {user?.two_factor_method === 'app' && (\r\n                      <p style={{ fontSize: '0.9rem', color: '#666', marginTop: '0.5rem' }}>\r\n                        💡 Use your authenticator app to get the 6-digit code\r\n                      </p>\r\n                    )}\r\n                    <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n                      <button \r\n                        type=\"button\"\r\n                        onClick={() => setStep(1)}\r\n                        className=\"btn btn-outline\"\r\n                      >\r\n                        ← Back\r\n                      </button>\r\n                      <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-danger\"\r\n                        disabled={disabling2FA}\r\n                        style={{ flex: 1 }}\r\n                      >\r\n                        {disabling2FA ? 'Disabling...' : '🔓 Disable 2FA'}\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {user?.is_admin && (\r\n            <div className=\"admin-section\">\r\n              <h2>Admin Panel</h2>\r\n              <p>Access administrative functions and manage the platform:</p>\r\n              <div className=\"admin-buttons\">\r\n                <Link to=\"/admin/dashboard\" className=\"btn btn-admin\">\r\n                  📊 Dashboard\r\n                </Link>\r\n                <Link to=\"/admin/orders\" className=\"btn btn-admin\">\r\n                  📦 Manage Orders\r\n                </Link>\r\n                <Link to=\"/admin/users\" className=\"btn btn-admin\">\r\n                  👥 Manage Users\r\n                </Link>\r\n                <Link to=\"/admin/products\" className=\"btn btn-admin\">\r\n                  🛍️ Manage Products\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {showTwoFactorSetup && (\r\n          <TwoFactorSetup \r\n            onClose={() => setShowTwoFactorSetup(false)}\r\n            onComplete={() => refetchUser()}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"names":["API_BASE","process","REACT_APP_API_BASE_URL","_ref","onClose","onComplete","step","setStep","useState","method","setMethod","qrCode","setQrCode","secret","setSecret","verificationCode","setVerificationCode","backupCodes","setBackupCodes","loading","setLoading","makeAuthenticatedRequest","useAuth","showToast","useToastContext","chooseMethod","async","selectedMethod","data","concat","body","JSON","stringify","qr_code","error","message","verifySetup","code","backup_codes","_jsx","className","children","_jsxs","style","maxWidth","onClick","float","background","border","fontSize","_Fragment","display","flexDirection","gap","margin","disabled","padding","alignItems","opacity","textAlign","src","alt","type","placeholder","value","onChange","e","target","maxLength","length","flex","color","marginTop","borderRadius","map","index","fontFamily","Profile","user","login","refetchUser","isEditing","setIsEditing","isChangingAvatar","setIsChangingAvatar","isChangingPassword","setIsChangingPassword","showTwoFactorSetup","setShowTwoFactorSetup","disabling2FA","setDisabling2FA","sendingVerification","setSendingVerification","availableAvatars","setAvailableAvatars","uploadingAvatar","setUploadingAvatar","passwordLoading","setPasswordLoading","sendingDisableCode","setSendingDisableCode","recaptchaLoaded","setRecaptchaLoaded","recaptchaWidgetId","setRecaptchaWidgetId","recaptchaRef","useRef","fileInputRef","formData","setFormData","full_name","email","phone","address","profile_image_url","passwordData","setPasswordData","old_password","new_password","confirm_password","disable2FAForm","setDisable2FAForm","password","passwordErrors","setPasswordErrors","useEffect","loadRecaptcha","window","grecaptcha","script","document","createElement","defer","onRecaptchaLoad","head","appendChild","current","widgetId","render","sitekey","REACT_APP_RECAPTCHA_SITE_KEY","callback","response","expired-callback","reset","handleInputChange","name","prev","_objectSpread","handlePasswordChange","canChangePassword","google_id","username","onError","avatars","marginBottom","ref","file","event","files","startsWith","size","FormData","append","headers","updatedUser","avatar_url","accept","triggerFileUpload","_fileInputRef$current","click","width","backgroundColor","justifyContent","borderBottom","paddingBottom","avatar","avatarUrl","handleSelectAvatar","cursor","onSubmit","preventDefault","rows","handleCancelEdit","email_verified","fetch","ok","json","detail","location","href","is_admin","fontWeight","validatePasswordForm","errors","test","Object","keys","recaptchaResponse","getResponse","recaptcha_response","handleCancelPasswordChange","two_factor_enabled","two_factor_method","required","autoFocus","Link","to","TwoFactorSetup"],"sourceRoot":""}