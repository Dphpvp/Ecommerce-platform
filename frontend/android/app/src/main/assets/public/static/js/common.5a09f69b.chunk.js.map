{"version":3,"file":"static/js/common.5a09f69b.chunk.js","mappings":"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","sources":["components/modal/modal.js","components/ProductCard.js","utils/mobileCaptcha.js","components/SecureForm.js"],"sourcesContent":["import React from 'react';\r\nimport '../../styles/components/Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"luxury-modal-overlay\" onClick={onClose}>\r\n      <div\r\n        className=\"luxury-modal-content\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <button\r\n          onClick={onClose}\r\n          className=\"luxury-modal-close\"\r\n          aria-label=\"Close modal\"\r\n        >\r\n          ✕\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;","// frontend/src/components/ProductCard.js - Updated with luxury styling\r\nimport React, { useState } from 'react';\r\nimport { useCart } from '../contexts/CartContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useToastContext } from './toast';\r\nimport Modal from './modal/modal';\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const { addToCart } = useCart();\r\n  const { user } = useAuth();\r\n  const { showToast } = useToastContext();\r\n\r\n  const handleAddToCart = async (e) => {\r\n    e.stopPropagation();\r\n    \r\n    if (!user) {\r\n      showToast('Please login to add items to cart', 'error');\r\n      return;\r\n    }\r\n\r\n    setIsAdding(true);\r\n    try {\r\n      const success = await addToCart(product._id, 1);\r\n      if (success) {\r\n        showToast('Added to cart successfully!', 'success');\r\n      } else {\r\n        showToast('Failed to add to cart', 'error');\r\n      }\r\n    } catch (error) {\r\n      showToast('Failed to add to cart', 'error');\r\n    } finally {\r\n      setIsAdding(false);\r\n    }\r\n  };\r\n\r\n  const getStockStatus = () => {\r\n    if (product.stock_quantity > 10) return 'in-stock';\r\n    if (product.stock_quantity > 0) return 'low-stock';\r\n    return 'out-of-stock';\r\n  };\r\n\r\n  const getStockText = () => {\r\n    if (product.stock_quantity > 10) return 'In Stock';\r\n    if (product.stock_quantity > 0) return `${product.stock_quantity} Left`;\r\n    return 'Out of Stock';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div \r\n        className=\"luxury-product-card-compact\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <div className=\"product-image-container-compact\">\r\n          <img \r\n            src={product.image_url} \r\n            alt={product.name}\r\n            loading=\"lazy\"\r\n            onError={(e) => {\r\n              e.target.src = '/images/placeholder-product.jpg';\r\n            }}\r\n          />\r\n          <div className=\"product-overlay-compact\">\r\n            <span>View Details</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"luxury-product-info-compact\">\r\n          <h3 className=\"product-name-compact\">{product.name}</h3>\r\n          <p className=\"product-category-compact\">{product.category}</p>\r\n          \r\n          <div className=\"price-stock-compact\">\r\n            <div className=\"price-section-compact\">\r\n              <span className=\"currency\">$</span>\r\n              <span className=\"price-amount-compact\">{product.price}</span>\r\n            </div>\r\n            <div className={`stock-dot-compact ${getStockStatus()}`} \r\n                 title={getStockText()}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\r\n        <div className=\"product-modal-content\">\r\n          <div className=\"product-modal-image\">\r\n            <img \r\n              src={product.image_url} \r\n              alt={product.name}\r\n              onError={(e) => {\r\n                e.target.src = '/images/placeholder-product.jpg';\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"product-modal-details\">\r\n            <div className=\"modal-header\">\r\n              <h2 className=\"modal-product-name\">{product.name}</h2>\r\n              <span className=\"modal-category\">{product.category}</span>\r\n            </div>\r\n\r\n            {product.description && (\r\n              <p className=\"modal-description\">{product.description}</p>\r\n            )}\r\n\r\n            <div className=\"modal-specifications\">\r\n              <div className=\"spec-item\">\r\n                <span className=\"spec-label\">Price</span>\r\n                <span className=\"spec-value\">${product.price}</span>\r\n              </div>\r\n              <div className=\"spec-item\">\r\n                <span className=\"spec-label\">Category</span>\r\n                <span className=\"spec-value\">{product.category}</span>\r\n              </div>\r\n              <div className=\"spec-item\">\r\n                <span className=\"spec-label\">Availability</span>\r\n                <span className={`spec-value ${\r\n                  product.stock_quantity > 10 ? 'text-green' :\r\n                  product.stock_quantity > 0 ? 'text-yellow' : 'text-red'\r\n                }`}>\r\n                  {getStockText()}\r\n                </span>\r\n              </div>\r\n              {product.material && (\r\n                <div className=\"spec-item\">\r\n                  <span className=\"spec-label\">Material</span>\r\n                  <span className=\"spec-value\">{product.material}</span>\r\n                </div>\r\n              )}\r\n              {product.origin && (\r\n                <div className=\"spec-item\">\r\n                  <span className=\"spec-label\">Origin</span>\r\n                  <span className=\"spec-value\">{product.origin}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"modal-actions\">\r\n              <button \r\n                className={`btn-modal-add-cart ${product.stock_quantity <= 0 ? 'disabled' : ''}`}\r\n                onClick={handleAddToCart}\r\n                disabled={isAdding || product.stock_quantity <= 0}\r\n              >\r\n                {isAdding ? 'Adding...' : \r\n                 product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart'}\r\n              </button>\r\n              <a \r\n                href=\"/contact\" \r\n                className=\"btn-modal-contact\"\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                Contact Us\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;","/**\r\n * Mobile-compatible captcha utility\r\n * Handles both web reCAPTCHA and mobile-friendly alternatives\r\n */\r\nimport platformDetection from './platformDetection.js';\r\n\r\nclass MobileCaptchaManager {\r\n  constructor() {\r\n    this.isLoaded = false;\r\n    this.widgetId = null;\r\n    \r\n    // Force mobile mode for now to debug\r\n    console.log('🔧 DEBUGGING: Forcing mobile mode for all devices');\r\n    \r\n    // Enhanced platform detection with aggressive fallbacks\r\n    try {\r\n      this.isMobile = platformDetection.isMobile;\r\n      this.platform = platformDetection.platform;\r\n      \r\n      // TEMPORARY: Force mobile mode if we detect any mobile indicators\r\n      const isCapacitor = !!window.Capacitor;\r\n      const isMobileUA = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n      const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\r\n      \r\n      if (isCapacitor || isMobileUA || isTouchDevice) {\r\n        console.log('🔧 FORCING mobile mode due to:', { isCapacitor, isMobileUA, isTouchDevice });\r\n        this.isMobile = true;\r\n        this.platform = 'mobile';\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.warn('Platform detection failed, using fallback', error);\r\n      // Fallback: Always use mobile captcha to avoid reCAPTCHA issues\r\n      this.isMobile = true;\r\n      this.platform = 'mobile';\r\n    }\r\n    \r\n    this.onLoadCallback = null;\r\n    this.onCompleteCallback = null;\r\n    this.onExpiredCallback = null;\r\n    \r\n    console.log('🔧 MobileCaptcha initialized:', {\r\n      isMobile: this.isMobile,\r\n      platform: this.platform,\r\n      userAgent: navigator.userAgent,\r\n      capacitor: !!window.Capacitor,\r\n      touchDevice: 'ontouchstart' in window,\r\n      maxTouchPoints: navigator.maxTouchPoints\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initialize captcha system based on platform\r\n   */\r\n  async initialize(config = {}) {\r\n    console.log('🚀 Initializing captcha with config:', {\r\n      ...config,\r\n      siteKey: config.siteKey ? '***' + config.siteKey.slice(-4) : 'missing'\r\n    });\r\n\r\n    const {\r\n      onLoad = null,\r\n      onComplete = null,\r\n      onExpired = null,\r\n    } = config;\r\n\r\n    this.onLoadCallback = onLoad;\r\n    this.onCompleteCallback = onComplete;\r\n    this.onExpiredCallback = onExpired;\r\n\r\n    try {\r\n      // ALWAYS use mobile captcha to avoid any reCAPTCHA issues\r\n      console.log('📱 Using mobile captcha (forced)');\r\n      this.isMobile = true; // Ensure mobile mode\r\n      return await this.initializeMobileCaptcha(config);\r\n      \r\n      // Commented out web reCAPTCHA to debug mobile issues\r\n      /*\r\n      if (this.isMobile) {\r\n        console.log('📱 Using mobile captcha');\r\n        return await this.initializeMobileCaptcha(config);\r\n      } else {\r\n        console.log('🌐 Using web reCAPTCHA');\r\n        return await this.initializeWebCaptcha(siteKey, theme, size);\r\n      }\r\n      */\r\n    } catch (error) {\r\n      console.error('❌ Mobile captcha initialization failed:', error);\r\n      \r\n      // Force success to prevent blocking the form\r\n      console.log('🔄 Forcing captcha loaded state');\r\n      this.isLoaded = true;\r\n      if (this.onLoadCallback) this.onLoadCallback();\r\n      return Promise.resolve(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize web reCAPTCHA\r\n   */\r\n  async initializeWebCaptcha(siteKey, theme, size) {\r\n    return new Promise((resolve, reject) => {\r\n      if (window.grecaptcha) {\r\n        this.isLoaded = true;\r\n        if (this.onLoadCallback) this.onLoadCallback();\r\n        resolve(true);\r\n        return;\r\n      }\r\n\r\n      const script = document.createElement('script');\r\n      script.src = 'https://www.google.com/recaptcha/api.js?onload=onMobileCaptchaLoad&render=explicit';\r\n      script.async = true;\r\n      script.defer = true;\r\n\r\n      window.onMobileCaptchaLoad = () => {\r\n        this.isLoaded = true;\r\n        if (this.onLoadCallback) this.onLoadCallback();\r\n        resolve(true);\r\n      };\r\n\r\n      script.onerror = () => {\r\n        console.error('Failed to load reCAPTCHA');\r\n        reject(new Error('Failed to load reCAPTCHA'));\r\n      };\r\n\r\n      document.head.appendChild(script);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initialize mobile-friendly captcha (custom implementation)\r\n   */\r\n  async initializeMobileCaptcha(config) {\r\n    console.log('📱 Initializing mobile captcha...');\r\n    \r\n    try {\r\n      // For mobile, we use a simplified math captcha or pattern recognition\r\n      this.isLoaded = true;\r\n      \r\n      console.log('✅ Mobile captcha loaded successfully');\r\n      \r\n      if (this.onLoadCallback) {\r\n        console.log('🔄 Calling onLoad callback');\r\n        this.onLoadCallback();\r\n      }\r\n      \r\n      return Promise.resolve(true);\r\n    } catch (error) {\r\n      console.error('❌ Mobile captcha initialization failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render captcha widget\r\n   */\r\n  render(container, config = {}) {\r\n    console.log('🎨 Rendering captcha:', {\r\n      isLoaded: this.isLoaded,\r\n      isMobile: this.isMobile,\r\n      platform: this.platform,\r\n      containerExists: !!container\r\n    });\r\n\r\n    if (!this.isLoaded) {\r\n      console.error('❌ Captcha not initialized');\r\n      throw new Error('Captcha not initialized');\r\n    }\r\n\r\n    if (!container) {\r\n      console.error('❌ No container provided');\r\n      throw new Error('Container element is required');\r\n    }\r\n\r\n    try {\r\n      // ALWAYS render mobile captcha\r\n      console.log('📱 Rendering mobile captcha (forced)');\r\n      this.isMobile = true; // Ensure mobile mode\r\n      return this.renderMobileCaptcha(container, config);\r\n      \r\n      // Commented out to force mobile captcha\r\n      /*\r\n      if (this.isMobile) {\r\n        console.log('📱 Rendering mobile captcha');\r\n        return this.renderMobileCaptcha(container, config);\r\n      } else {\r\n        console.log('🌐 Rendering web reCAPTCHA');\r\n        return this.renderWebCaptcha(container, config);\r\n      }\r\n      */\r\n    } catch (error) {\r\n      console.error('❌ Mobile captcha render failed:', error);\r\n      \r\n      // Create a simple fallback captcha\r\n      console.log('🔄 Creating emergency fallback captcha');\r\n      container.innerHTML = `\r\n        <div class=\"mobile-captcha\">\r\n          <div class=\"captcha-question\">\r\n            <label for=\"captcha-input-fallback\">Security Check: Enter \"1234\"</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"captcha-input-fallback\" \r\n              placeholder=\"Enter 1234\"\r\n            />\r\n          </div>\r\n        </div>\r\n      `;\r\n      \r\n      const input = container.querySelector('#captcha-input-fallback');\r\n      input.addEventListener('input', (e) => {\r\n        if (e.target.value === '1234') {\r\n          if (config.callback) config.callback('emergency-fallback-token');\r\n          if (this.onCompleteCallback) this.onCompleteCallback('emergency-fallback-token');\r\n        }\r\n      });\r\n      \r\n      return 'emergency-fallback';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render web reCAPTCHA\r\n   */\r\n  renderWebCaptcha(container, config) {\r\n    const {\r\n      sitekey,\r\n      theme = 'light',\r\n      size = 'normal',\r\n      callback,\r\n      'expired-callback': expiredCallback\r\n    } = config;\r\n\r\n    try {\r\n      this.widgetId = window.grecaptcha.render(container, {\r\n        sitekey,\r\n        theme,\r\n        size,\r\n        callback: (response) => {\r\n          if (callback) callback(response);\r\n          if (this.onCompleteCallback) this.onCompleteCallback(response);\r\n        },\r\n        'expired-callback': () => {\r\n          if (expiredCallback) expiredCallback();\r\n          if (this.onExpiredCallback) this.onExpiredCallback();\r\n        }\r\n      });\r\n      return this.widgetId;\r\n    } catch (error) {\r\n      console.error('reCAPTCHA render error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render mobile captcha (custom implementation)\r\n   */\r\n  renderMobileCaptcha(container, config) {\r\n    console.log('📱 Rendering mobile captcha widget');\r\n    \r\n    const { callback } = config;\r\n    \r\n    // Generate a simple math problem\r\n    const num1 = Math.floor(Math.random() * 10) + 1;\r\n    const num2 = Math.floor(Math.random() * 10) + 1;\r\n    const correctAnswer = num1 + num2;\r\n\r\n    // Check if we're on Android for special handling\r\n    const isAndroid = /Android/i.test(navigator.userAgent);\r\n    const inputMode = isAndroid ? 'tel' : 'number';\r\n    const androidClass = isAndroid ? 'android-input' : '';\r\n\r\n    container.innerHTML = `\r\n      <div class=\"mobile-captcha ${isAndroid ? 'android-captcha' : ''}\">\r\n        <div class=\"captcha-question\">\r\n          <label for=\"captcha-input\">Security Check: What is ${num1} + ${num2}?</label>\r\n          <input \r\n            type=\"${inputMode}\" \r\n            id=\"captcha-input\" \r\n            class=\"captcha-input ${androidClass}\" \r\n            placeholder=\"Enter answer\"\r\n            min=\"0\"\r\n            max=\"20\"\r\n            inputmode=\"numeric\"\r\n            pattern=\"[0-9]*\"\r\n            autocomplete=\"off\"\r\n            autocorrect=\"off\"\r\n            autocapitalize=\"off\"\r\n            spellcheck=\"false\"\r\n          />\r\n        </div>\r\n        <div class=\"captcha-feedback\"></div>\r\n      </div>\r\n    `;\r\n\r\n    const input = container.querySelector('#captcha-input');\r\n    const feedback = container.querySelector('.captcha-feedback');\r\n    \r\n    // Android-specific input handling\r\n    if (isAndroid) {\r\n      this._setupAndroidInputHandling(input, feedback, correctAnswer, num1, num2, callback);\r\n    } else {\r\n      this._setupStandardInputHandling(input, feedback, correctAnswer, num1, num2, callback);\r\n    }\r\n\r\n    // Store the correct answer for verification\r\n    this.currentAnswer = correctAnswer;\r\n    this.widgetId = 'mobile-captcha-' + Date.now();\r\n    \r\n    return this.widgetId;\r\n  }\r\n\r\n  /**\r\n   * Setup Android-specific input handling\r\n   */\r\n  _setupAndroidInputHandling(input, feedback, correctAnswer, num1, num2, callback) {\r\n    let inputTimeout;\r\n    \r\n    // Handle Android keyboard behavior\r\n    input.addEventListener('focus', () => {\r\n      // Prevent viewport scaling on Android\r\n      const viewport = document.querySelector('meta[name=\"viewport\"]');\r\n      if (viewport) {\r\n        const originalContent = viewport.content;\r\n        viewport.content = originalContent + ', user-scalable=no';\r\n        \r\n        // Restore after focus\r\n        setTimeout(() => {\r\n          viewport.content = originalContent;\r\n        }, 100);\r\n      }\r\n      \r\n      // Scroll input into view on Android\r\n      setTimeout(() => {\r\n        input.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n      }, 300);\r\n    });\r\n    \r\n    // Debounced input validation for Android\r\n    input.addEventListener('input', (e) => {\r\n      clearTimeout(inputTimeout);\r\n      inputTimeout = setTimeout(() => {\r\n        this._validateInput(e, feedback, correctAnswer, num1, num2, callback);\r\n      }, 300);\r\n    });\r\n    \r\n    // Handle Android \"Done\" button\r\n    input.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Enter' || e.keyCode === 13) {\r\n        e.preventDefault();\r\n        input.blur();\r\n        this._validateInput({ target: input }, feedback, correctAnswer, num1, num2, callback);\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Setup standard input handling\r\n   */\r\n  _setupStandardInputHandling(input, feedback, correctAnswer, num1, num2, callback) {\r\n    input.addEventListener('input', (e) => {\r\n      this._validateInput(e, feedback, correctAnswer, num1, num2, callback);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Validate captcha input\r\n   */\r\n  _validateInput(e, feedback, correctAnswer, num1, num2, callback) {\r\n    const userAnswer = parseInt(e.target.value);\r\n    if (userAnswer === correctAnswer) {\r\n      feedback.textContent = '✓ Correct!';\r\n      feedback.style.color = 'green';\r\n      e.target.style.borderColor = 'green';\r\n      \r\n      // Generate a mobile captcha token\r\n      const mobileToken = this.generateMobileToken(num1, num2, correctAnswer);\r\n      if (callback) callback(mobileToken);\r\n      if (this.onCompleteCallback) this.onCompleteCallback(mobileToken);\r\n    } else if (e.target.value && userAnswer !== correctAnswer) {\r\n      feedback.textContent = '✗ Incorrect, try again';\r\n      feedback.style.color = 'red';\r\n      e.target.style.borderColor = 'red';\r\n    } else {\r\n      feedback.textContent = '';\r\n      e.target.style.borderColor = '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate mobile captcha token\r\n   */\r\n  generateMobileToken(num1, num2, answer) {\r\n    const timestamp = Date.now();\r\n    const data = { num1, num2, answer, timestamp, platform: 'mobile' };\r\n    \r\n    // Use safer encoding for Android\r\n    try {\r\n      return btoa(JSON.stringify(data));\r\n    } catch (error) {\r\n      console.warn('🤖 btoa failed on Android, using fallback encoding');\r\n      // Fallback for Android devices with encoding issues\r\n      return this._androidSafeEncode(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Android-safe encoding fallback\r\n   */\r\n  _androidSafeEncode(data) {\r\n    // Simple character-by-character base64 alternative for Android\r\n    const str = JSON.stringify(data);\r\n    let result = '';\r\n    \r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      result += char.toString(16).padStart(2, '0');\r\n    }\r\n    \r\n    return 'android-' + result;\r\n  }\r\n\r\n  /**\r\n   * Get captcha response\r\n   */\r\n  getResponse(widgetId) {\r\n    console.log('🔍 Getting captcha response:', { widgetId, isMobile: this.isMobile, currentAnswer: this.currentAnswer });\r\n    \r\n    // Always try mobile captcha first\r\n    const input = document.querySelector('#captcha-input') || document.querySelector('#captcha-input-fallback');\r\n    \r\n    if (input) {\r\n      console.log('📱 Found mobile captcha input:', input.value);\r\n      \r\n      // Check for emergency fallback\r\n      if (input.id === 'captcha-input-fallback' && input.value === '1234') {\r\n        console.log('✅ Emergency fallback captcha completed');\r\n        return 'emergency-fallback-token';\r\n      }\r\n      \r\n      // Check for math captcha\r\n      if (input.id === 'captcha-input' && parseInt(input.value) === this.currentAnswer) {\r\n        console.log('✅ Math captcha completed correctly');\r\n        return this.generateMobileToken(0, 0, this.currentAnswer);\r\n      }\r\n    }\r\n    \r\n    // Fallback to web reCAPTCHA if needed (should never happen now)\r\n    if (!this.isMobile && window.grecaptcha && this.widgetId !== null) {\r\n      console.log('🌐 Using web reCAPTCHA response');\r\n      return window.grecaptcha.getResponse(this.widgetId);\r\n    }\r\n    \r\n    console.log('❌ No captcha response found');\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Reset captcha\r\n   */\r\n  reset(widgetId) {\r\n    if (this.isMobile) {\r\n      const container = document.querySelector('.mobile-captcha');\r\n      if (container) {\r\n        // Re-render with new math problem\r\n        const parentContainer = container.parentElement;\r\n        this.renderMobileCaptcha(parentContainer, {});\r\n      }\r\n    } else {\r\n      if (window.grecaptcha && this.widgetId !== null) {\r\n        window.grecaptcha.reset(this.widgetId);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if captcha is completed\r\n   */\r\n  isCompleted() {\r\n    const response = this.getResponse();\r\n    return response && response.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Get platform info\r\n   */\r\n  getPlatformInfo() {\r\n    return {\r\n      isMobile: this.isMobile,\r\n      platform: this.isMobile ? 'mobile' : 'web',\r\n      userAgent: navigator.userAgent,\r\n      capacitor: !!window.Capacitor\r\n    };\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst mobileCaptcha = new MobileCaptchaManager();\r\n\r\nexport default mobileCaptcha;","import React, { useState, useEffect } from 'react';\r\nimport { csrfManager, sanitizeInput, validateInput } from '../utils/csrf';\r\nimport { useToastContext } from './toast';\r\n\r\nconst SecureForm = ({ \r\n  onSubmit, \r\n  children, \r\n  validate = true, \r\n  className = \"\",\r\n  requireAuth = false,\r\n  ...props \r\n}) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [csrfToken, setCsrfToken] = useState(null);\r\n  const [tokenLoading, setTokenLoading] = useState(true);\r\n  const { showToast } = useToastContext();\r\n\r\n  useEffect(() => {\r\n    const getCsrfToken = async () => {\r\n      setTokenLoading(true);\r\n      try {\r\n        const token = await csrfManager.getToken();\r\n        setCsrfToken(token);\r\n        if (!token) {\r\n          console.warn('⚠️ CSRF token not available');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to get CSRF token:', error);\r\n        showToast('Security token failed to load. Please refresh the page.', 'error');\r\n      } finally {\r\n        setTokenLoading(false);\r\n      }\r\n    };\r\n    getCsrfToken();\r\n  }, [showToast]);\r\n\r\n  const validateField = (key, value) => {\r\n    const errors = {};\r\n    \r\n    if (key.includes('email') && value) {\r\n      if (!validateInput.email(value)) {\r\n        errors[key] = 'Please enter a valid email address';\r\n      }\r\n    }\r\n    \r\n    if (key.includes('password') && value) {\r\n      const result = validateInput.password(value);\r\n      if (!result.valid) {\r\n        errors[key] = result.message;\r\n      }\r\n    }\r\n    \r\n    if (key.includes('username') && value) {\r\n      const result = validateInput.username(value);\r\n      if (!result.valid) {\r\n        errors[key] = result.message;\r\n      }\r\n    }\r\n    \r\n    if (key.includes('url') && value) {\r\n      const result = validateInput.url(value);\r\n      if (!result.valid) {\r\n        errors[key] = result.message;\r\n      }\r\n    }\r\n    \r\n    if (key.includes('phone') && value) {\r\n      if (!validateInput.phone(value)) {\r\n        errors[key] = 'Please enter a valid phone number';\r\n      }\r\n    }\r\n    \r\n    // Required field validation\r\n    if (value === '' && key !== 'phone' && key !== 'address' && key !== 'send_confirmation') {\r\n      errors[key] = 'This field is required';\r\n    }\r\n    \r\n    // Length validation for message/description\r\n    if ((key.includes('message') || key.includes('description')) && value) {\r\n      if (value.length < 20) {\r\n        errors[key] = 'Must be at least 20 characters long';\r\n      }\r\n      if (value.length > 2000) {\r\n        errors[key] = 'Must be less than 2000 characters';\r\n      }\r\n    }\r\n    \r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setErrors({});\r\n\r\n    if (!csrfToken) {\r\n      showToast('Security token not available. Please refresh the page.', 'error');\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData.entries());\r\n\r\n    // Client-side validation if enabled\r\n    if (validate) {\r\n      const validationErrors = {};\r\n      \r\n      Object.entries(data).forEach(([key, value]) => {\r\n        const fieldErrors = validateField(key, value);\r\n        Object.assign(validationErrors, fieldErrors);\r\n      });\r\n\r\n      if (Object.keys(validationErrors).length > 0) {\r\n        setErrors(validationErrors);\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Sanitize inputs\r\n    const sanitizedData = {};\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      if (key.includes('email')) {\r\n        sanitizedData[key] = sanitizeInput.email(value);\r\n      } else if (key.includes('url')) {\r\n        sanitizedData[key] = sanitizeInput.url(value);\r\n      } else if (key.includes('phone')) {\r\n        sanitizedData[key] = sanitizeInput.phone(value);\r\n      } else if (key.includes('message') || key.includes('description')) {\r\n        sanitizedData[key] = sanitizeInput.html(value);\r\n      } else {\r\n        sanitizedData[key] = sanitizeInput.text(value);\r\n      }\r\n    });\r\n\r\n    try {\r\n      await onSubmit(sanitizedData, csrfToken);\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n      if (error.message.includes('CSRF')) {\r\n        showToast('Security token expired. Please refresh the page.', 'error');\r\n      } else {\r\n        setErrors({ general: error.message || 'Form submission failed. Please try again.' });\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={className} {...props}>\r\n      {errors.general && (\r\n        <div className=\"error-message\" style={{ marginBottom: '1rem', color: '#dc3545' }}>\r\n          {errors.general}\r\n        </div>\r\n      )}\r\n      \r\n      {React.Children.map(children, child => {\r\n        if (React.isValidElement(child)) {\r\n          const fieldName = child.props.name;\r\n          const hasError = errors[fieldName];\r\n          \r\n          return React.cloneElement(child, {\r\n            className: `${child.props.className || ''} ${hasError ? 'error' : ''}`,\r\n            'aria-invalid': hasError ? 'true' : 'false',\r\n            'aria-describedby': hasError ? `${fieldName}-error` : undefined,\r\n            ...(hasError && {\r\n              style: { \r\n                ...child.props.style, \r\n                borderColor: '#dc3545' \r\n              }\r\n            }),\r\n            ...(child.type === 'button' && child.props.type === 'submit' && {\r\n              disabled: isSubmitting || !csrfToken\r\n            })\r\n          });\r\n        }\r\n        return child;\r\n      })}\r\n      \r\n      {Object.entries(errors).map(([field, message]) => \r\n        field !== 'general' && (\r\n          <div key={field} id={`${field}-error`} className=\"error-text\" style={{ color: '#dc3545', fontSize: '0.9rem', marginTop: '0.25rem' }}>\r\n            {message}\r\n          </div>\r\n        )\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SecureForm;"],"names":["_ref","isOpen","onClose","children","_jsx","className","onClick","_jsxs","e","stopPropagation","product","showModal","setShowModal","useState","isAdding","setIsAdding","addToCart","useCart","user","useAuth","showToast","useToastContext","getStockText","stock_quantity","concat","_Fragment","src","image_url","alt","name","loading","onError","target","category","price","title","Modal","description","material","origin","async","_id","error","disabled","href","constructor","this","isLoaded","widgetId","isMobile","platformDetection","platform","isCapacitor","window","Capacitor","isMobileUA","test","navigator","userAgent","isTouchDevice","maxTouchPoints","onLoadCallback","onCompleteCallback","onExpiredCallback","initialize","config","arguments","length","undefined","onLoad","onComplete","onExpired","initializeMobileCaptcha","Promise","resolve","initializeWebCaptcha","siteKey","theme","size","reject","grecaptcha","script","document","createElement","defer","onMobileCaptchaLoad","onerror","Error","head","appendChild","render","container","renderMobileCaptcha","innerHTML","querySelector","addEventListener","value","callback","renderWebCaptcha","sitekey","expiredCallback","response","expired-callback","num1","Math","floor","random","num2","correctAnswer","isAndroid","inputMode","androidClass","input","feedback","_setupAndroidInputHandling","_setupStandardInputHandling","currentAnswer","Date","now","inputTimeout","viewport","originalContent","content","setTimeout","scrollIntoView","behavior","block","clearTimeout","_validateInput","key","keyCode","preventDefault","blur","userAnswer","parseInt","textContent","style","color","borderColor","mobileToken","generateMobileToken","answer","data","timestamp","btoa","JSON","stringify","_androidSafeEncode","str","result","i","charCodeAt","toString","padStart","getResponse","id","reset","parentContainer","parentElement","isCompleted","getPlatformInfo","capacitor","onSubmit","validate","requireAuth","props","_objectWithoutProperties","_excluded","isSubmitting","setIsSubmitting","errors","setErrors","csrfToken","setCsrfToken","tokenLoading","setTokenLoading","useEffect","token","csrfManager","getToken","getCsrfToken","_objectSpread","formData","FormData","Object","fromEntries","entries","validationErrors","forEach","_ref2","fieldErrors","validateField","includes","validateInput","email","password","valid","message","username","url","phone","assign","keys","sanitizedData","_ref3","sanitizeInput","html","text","general","marginBottom","React","map","child","fieldName","hasError","type","_ref4","field","fontSize","marginTop"],"sourceRoot":""}